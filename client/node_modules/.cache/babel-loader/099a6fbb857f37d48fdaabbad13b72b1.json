{"ast":null,"code":"var _jsxFileName = \"/Users/asl/PROJECTS/simply-vegan/simply-vegan-frontend/src/components/books/Books.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types'; // components\n\nimport CreateBookModal from './CreateBookModal';\nimport BookItem from './BookItem';\nimport Spinner from '../layout/Spinner'; // redux\n\nimport { connect } from 'react-redux';\nimport { getBooks } from '../../actions/book';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Books = ({\n  book,\n  getBooks\n}) => {\n  _s();\n\n  const {\n    books,\n    loading\n  } = book;\n  const [showModal, setShowModal] = useState(false);\n  useEffect(() => {\n    getBooks();\n    console.log(\"BOOKS:\", loading);\n    console.log(book.books);\n  }, [getBooks]);\n\n  const refreshPage = () => {\n    setShowModal(false);\n    getBooks();\n  };\n\n  return loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: showModal ? 'cards blur' : 'cards',\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card card-add\",\n        onClick: () => setShowModal(true),\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"plus-icon\",\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), showModal && /*#__PURE__*/_jsxDEV(CreateBookModal, {\n      onCancel: () => setShowModal(false),\n      onCreate: refreshPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Books, \"yDc3Km869gD6lnL/d2JehHdpdes=\");\n\n_c = Books;\nBooks.propTypes = {\n  book: PropTypes.object.isRequired,\n  getBooks: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  book: state.book\n});\n\nexport default connect(mapStateToProps, {\n  getBooks\n})(Books);\n\nvar _c;\n\n$RefreshReg$(_c, \"Books\");","map":{"version":3,"sources":["/Users/asl/PROJECTS/simply-vegan/simply-vegan-frontend/src/components/books/Books.js"],"names":["React","Fragment","useState","useEffect","PropTypes","CreateBookModal","BookItem","Spinner","connect","getBooks","Books","book","books","loading","showModal","setShowModal","console","log","refreshPage","propTypes","object","isRequired","func","mapStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,EAAoCC,SAApC,QAAqD,OAArD;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,OAAP,MAAoB,mBAApB,C,CAEA;;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,oBAAzB;;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQF,EAAAA;AAAR,CAAD,KAAwB;AAAA;;AAClC,QAAM;AAAEG,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAqBF,IAA3B;AACA,QAAM,CAACG,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,KAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,QAAQ;AACRO,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBJ,OAAtB;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYN,IAAI,CAACC,KAAjB;AACH,GAJQ,EAIN,CAACH,QAAD,CAJM,CAAT;;AAMA,QAAMS,WAAW,GAAG,MAAM;AACtBH,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACAN,IAAAA,QAAQ;AACX,GAHD;;AAKA,SACII,OAAO,gBACP,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UADO,gBAGP,QAAC,QAAD;AAAA,4BACI;AAAK,MAAA,SAAS,EAAEC,SAAS,GAAG,YAAH,GAAkB,OAA3C;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,eAAf;AAA+B,QAAA,OAAO,EAAE,MAAMC,YAAY,CAAC,IAAD,CAA1D;AAAA,+BACI;AAAM,UAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,EAUKD,SAAS,iBACN,QAAC,eAAD;AACI,MAAA,QAAQ,EAAE,MAAMC,YAAY,CAAC,KAAD,CADhC;AAEI,MAAA,QAAQ,EAAEG;AAFd;AAAA;AAAA;AAAA;AAAA,YAXR;AAAA;AAAA;AAAA;AAAA;AAAA,UAJJ;AAuBH,CAtCD;;GAAMR,K;;KAAAA,K;AAwCNA,KAAK,CAACS,SAAN,GAAkB;AAChBR,EAAAA,IAAI,EAAEP,SAAS,CAACgB,MAAV,CAAiBC,UADP;AAEhBZ,EAAAA,QAAQ,EAAEL,SAAS,CAACkB,IAAV,CAAeD;AAFT,CAAlB;;AAKA,MAAME,eAAe,GAAIC,KAAD,KAAY;AAClCb,EAAAA,IAAI,EAAEa,KAAK,CAACb;AADsB,CAAZ,CAAxB;;AAIA,eAAeH,OAAO,CAACe,eAAD,EAAkB;AAAEd,EAAAA;AAAF,CAAlB,CAAP,CAAuCC,KAAvC,CAAf","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\n\n// components\nimport CreateBookModal from './CreateBookModal'\nimport BookItem from './BookItem'\nimport Spinner from '../layout/Spinner'\n\n// redux\nimport { connect } from 'react-redux'\nimport { getBooks } from '../../actions/book'\n\nconst Books = ({ book, getBooks }) => {\n    const { books, loading } = book\n    const [showModal, setShowModal] = useState(false)\n\n    useEffect(() => {\n        getBooks()\n        console.log(\"BOOKS:\", loading)\n        console.log(book.books)\n    }, [getBooks])\n\n    const refreshPage = () => {\n        setShowModal(false)\n        getBooks()\n    }\n\n    return (\n        loading ? (\n        <Spinner />\n    ) : (\n        <Fragment>\n            <div className={showModal ? 'cards blur' : 'cards'}>\n                <div className=\"card card-add\" onClick={() => setShowModal(true)}>\n                    <span className=\"plus-icon\">+</span>\n                </div>\n                {/* {books.map((book) => (\n                    <BookItem key={book._id} book={book} />\n                ))} */}\n            </div>\n\n            {showModal && (\n                <CreateBookModal\n                    onCancel={() => setShowModal(false)}\n                    onCreate={refreshPage}\n                />\n            )}\n        </Fragment>\n    )\n  )\n}\n\nBooks.propTypes = {\n  book: PropTypes.object.isRequired,\n  getBooks: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = (state) => ({\n  book: state.book,\n})\n\nexport default connect(mapStateToProps, { getBooks })(Books)\n"]},"metadata":{},"sourceType":"module"}