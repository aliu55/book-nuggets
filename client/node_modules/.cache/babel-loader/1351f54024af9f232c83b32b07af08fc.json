{"ast":null,"code":"import axios from 'axios';\nimport { config, apiUrl } from '../config';\nimport { setAlert } from './alert';\nimport { GET_POSTS, GET_POST, DELETE_POST, ADD_POST, UPDATE_LIKES, POST_ERROR } from './types';\nexport const getPosts = () => async dispatch => {\n  try {\n    const res = await axios.get(`${config.apiUrl}/posts`);\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data\n    });\n    dispatch(setAlert('Retrieved all posts successfully!', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const getPost = id => async dispatch => {\n  try {\n    const res = await axios.get(`${apiUrl}/api/posts/${id}`);\n    dispatch({\n      type: GET_POST,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const deletePost = id => async dispatch => {\n  try {\n    await axios.delete(`${apiUrl}/posts/${id}`);\n    dispatch({\n      type: DELETE_POST,\n      payload: id\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const addPost = formData => async dispatch => {\n  try {\n    const res = await axios.post(`${apiUrl}/posts`, formData, apiConfig);\n    dispatch({\n      type: ADD_POST,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const addLike = postId => async dispatch => {\n  try {\n    const res = await axios.put(`${apiUrl}/posts/like/${postId}`);\n    console.log('addLike RESPONSE:', res.data);\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const removeLike = postId => async dispatch => {\n  try {\n    const res = await axios.put(`${apiUrl}/posts/unlike/${postId}`);\n    console.log('removeLike RESPONSE:', res.data);\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};","map":{"version":3,"sources":["/Users/asl/PROJECTS/simply-vegan/simply-vegan-frontend/src/actions/post.js"],"names":["axios","config","apiUrl","setAlert","GET_POSTS","GET_POST","DELETE_POST","ADD_POST","UPDATE_LIKES","POST_ERROR","getPosts","dispatch","res","get","type","payload","data","err","msg","response","statusText","status","getPost","id","deletePost","delete","addPost","formData","post","apiConfig","addLike","postId","put","console","log","removeLike"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,MAAjB,QAA+B,WAA/B;AACA,SAASC,QAAT,QAAyB,SAAzB;AACA,SACIC,SADJ,EAEIC,QAFJ,EAGIC,WAHJ,EAIIC,QAJJ,EAKIC,YALJ,EAMIC,UANJ,QAOO,SAPP;AAUA,OAAO,MAAMC,QAAQ,GAAG,MAAM,MAAOC,QAAP,IAAoB;AAC9C,MAAI;AAEA,UAAMC,GAAG,GAAG,MAAMZ,KAAK,CAACa,GAAN,CAAW,GAAEZ,MAAM,CAACC,MAAO,QAA3B,CAAlB;AAEAS,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEV,SADD;AAELW,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFR,KAAD,CAAR;AAKAL,IAAAA,QAAQ,CAACR,QAAQ,CAAC,mCAAD,EAAsC,SAAtC,CAAT,CAAR;AAEH,GAXD,CAWE,OAAOc,GAAP,EAAY;AACVN,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEL,UADD;AAELM,MAAAA,OAAO,EAAE;AAAEG,QAAAA,GAAG,EAAED,GAAG,CAACE,QAAJ,CAAaC,UAApB;AAAgCC,QAAAA,MAAM,EAAEJ,GAAG,CAACE,QAAJ,CAAaE;AAArD;AAFJ,KAAD,CAAR;AAIH;AACJ,CAlBM;AAoBP,OAAO,MAAMC,OAAO,GAAGC,EAAE,IAAI,MAAMZ,QAAN,IAAkB;AAE3C,MAAI;AACA,UAAMC,GAAG,GAAG,MAAMZ,KAAK,CAACa,GAAN,CAAW,GAAEX,MAAO,cAAaqB,EAAG,EAApC,CAAlB;AAEAZ,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAET,QADD;AAELU,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFR,KAAD,CAAR;AAKH,GARD,CAQE,OAAOC,GAAP,EAAY;AACVN,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEL,UADD;AAELM,MAAAA,OAAO,EAAE;AAAEG,QAAAA,GAAG,EAAED,GAAG,CAACE,QAAJ,CAAaC,UAApB;AAAgCC,QAAAA,MAAM,EAAEJ,GAAG,CAACE,QAAJ,CAAaE;AAArD;AAFJ,KAAD,CAAR;AAIH;AACJ,CAhBM;AAkBP,OAAO,MAAMG,UAAU,GAAGD,EAAE,IAAI,MAAOZ,QAAP,IAAoB;AAChD,MAAI;AAEA,UAAMX,KAAK,CAACyB,MAAN,CAAc,GAAEvB,MAAO,UAASqB,EAAG,EAAnC,CAAN;AAEAZ,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAER,WADD;AAELS,MAAAA,OAAO,EAAEQ;AAFJ,KAAD,CAAR;AAKH,GATD,CASE,OAAON,GAAP,EAAY;AAEVN,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEL,UADD;AAELM,MAAAA,OAAO,EAAE;AAAEG,QAAAA,GAAG,EAAED,GAAG,CAACE,QAAJ,CAAaC,UAApB;AAAgCC,QAAAA,MAAM,EAAEJ,GAAG,CAACE,QAAJ,CAAaE;AAArD;AAFJ,KAAD,CAAR;AAKH;AACJ,CAlBM;AAoBP,OAAO,MAAMK,OAAO,GAAGC,QAAQ,IAAI,MAAOhB,QAAP,IAAoB;AACnD,MAAI;AAEA,UAAMC,GAAG,GAAG,MAAMZ,KAAK,CAAC4B,IAAN,CAAY,GAAE1B,MAAO,QAArB,EAA8ByB,QAA9B,EAAwCE,SAAxC,CAAlB;AAEAlB,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEP,QADD;AAELQ,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFR,KAAD,CAAR;AAKH,GATD,CASE,OAAOC,GAAP,EAAY;AAEVN,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEL,UADD;AAELM,MAAAA,OAAO,EAAE;AAAEG,QAAAA,GAAG,EAAED,GAAG,CAACE,QAAJ,CAAaC,UAApB;AAAgCC,QAAAA,MAAM,EAAEJ,GAAG,CAACE,QAAJ,CAAaE;AAArD;AAFJ,KAAD,CAAR;AAKH;AACJ,CAlBM;AAoBP,OAAO,MAAMS,OAAO,GAAGC,MAAM,IAAI,MAAOpB,QAAP,IAAoB;AACjD,MAAI;AAEA,UAAMC,GAAG,GAAG,MAAMZ,KAAK,CAACgC,GAAN,CAAW,GAAE9B,MAAO,eAAc6B,MAAO,EAAzC,CAAlB;AAEAE,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCtB,GAAG,CAACI,IAArC;AAEAL,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEN,YADD;AAELO,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFR,KAAD,CAAR;AAKH,GAXD,CAWE,OAAOC,GAAP,EAAY;AACVN,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEL,UADD;AAELM,MAAAA,OAAO,EAAE;AAAEG,QAAAA,GAAG,EAAED,GAAG,CAACE,QAAJ,CAAaC,UAApB;AAAgCC,QAAAA,MAAM,EAAEJ,GAAG,CAACE,QAAJ,CAAaE;AAArD;AAFJ,KAAD,CAAR;AAIH;AACJ,CAlBM;AAoBP,OAAO,MAAMc,UAAU,GAAGJ,MAAM,IAAI,MAAOpB,QAAP,IAAoB;AACpD,MAAI;AAEA,UAAMC,GAAG,GAAG,MAAMZ,KAAK,CAACgC,GAAN,CAAW,GAAE9B,MAAO,iBAAgB6B,MAAO,EAA3C,CAAlB;AAEAE,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCtB,GAAG,CAACI,IAAxC;AAEAL,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEN,YADD;AAELO,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFR,KAAD,CAAR;AAKH,GAXD,CAWE,OAAOC,GAAP,EAAY;AACVN,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEL,UADD;AAELM,MAAAA,OAAO,EAAE;AAAEG,QAAAA,GAAG,EAAED,GAAG,CAACE,QAAJ,CAAaC,UAApB;AAAgCC,QAAAA,MAAM,EAAEJ,GAAG,CAACE,QAAJ,CAAaE;AAArD;AAFJ,KAAD,CAAR;AAIH;AACJ,CAlBM","sourcesContent":["import axios from 'axios'\nimport { config, apiUrl } from '../config'\nimport { setAlert } from './alert'\nimport {\n    GET_POSTS,\n    GET_POST,\n    DELETE_POST,\n    ADD_POST,\n    UPDATE_LIKES,\n    POST_ERROR\n} from './types'\n\n\nexport const getPosts = () => async (dispatch) => {\n    try {\n\n        const res = await axios.get(`${config.apiUrl}/posts`)\n\n        dispatch({\n            type: GET_POSTS,\n            payload: res.data\n        })\n\n        dispatch(setAlert('Retrieved all posts successfully!', 'success'))\n\n    } catch (err) {\n        dispatch({\n            type: POST_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        })\n    }\n}\n\nexport const getPost = id => async dispatch => {\n\n    try {\n        const res = await axios.get(`${apiUrl}/api/posts/${id}`)\n\n        dispatch({\n            type: GET_POST,\n            payload: res.data\n        })\n\n    } catch (err) {\n        dispatch({\n            type: POST_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        });\n    }\n}\n\nexport const deletePost = id => async (dispatch) => {\n    try {\n\n        await axios.delete(`${apiUrl}/posts/${id}`)\n\n        dispatch({\n            type: DELETE_POST,\n            payload: id\n        })\n        \n    } catch (err) {\n        \n        dispatch({\n            type: POST_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        })\n\n    }\n}\n\nexport const addPost = formData => async (dispatch) => {\n    try {\n\n        const res = await axios.post(`${apiUrl}/posts`, formData, apiConfig)\n\n        dispatch({\n            type: ADD_POST,\n            payload: res.data\n        })\n        \n    } catch (err) {\n        \n        dispatch({\n            type: POST_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        })\n\n    }\n}\n\nexport const addLike = postId => async (dispatch) => {\n    try {\n\n        const res = await axios.put(`${apiUrl}/posts/like/${postId}`)\n\n        console.log('addLike RESPONSE:', res.data)\n\n        dispatch({\n            type: UPDATE_LIKES,\n            payload: res.data\n        })\n\n    } catch (err) {\n        dispatch({\n            type: POST_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        })\n    }\n}\n\nexport const removeLike = postId => async (dispatch) => {\n    try {\n\n        const res = await axios.put(`${apiUrl}/posts/unlike/${postId}`)\n\n        console.log('removeLike RESPONSE:', res.data)\n\n        dispatch({\n            type: UPDATE_LIKES,\n            payload: res.data\n        })\n\n    } catch (err) {\n        dispatch({\n            type: POST_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        })\n    }\n}"]},"metadata":{},"sourceType":"module"}