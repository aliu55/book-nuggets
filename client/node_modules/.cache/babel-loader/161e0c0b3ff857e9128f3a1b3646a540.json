{"ast":null,"code":"import _toConsumableArray from\"/Users/asl/PROJECTS/simply-vegan/simply-vegan-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import{SET_ALERT,REMOVE_ALERT}from'../actions/types';// format of inital state\n// [\n//     {\n//         msg: 'Logged in successfully',\n//         alertType; 'success'\n//         id: 1\n//     }\n// ]\nvar initialState=[];export default function alertReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;var type=action.type,payload=action.payload;switch(type){case SET_ALERT:// payload here is { msg, alertType, id }zzz\nreturn[].concat(_toConsumableArray(state),[payload]);case REMOVE_ALERT:// payload here is just the id \nreturn state.filter(function(alert){return alert.id!==payload;});default:return state;}}// if you're confused about why the payload is different\n// then refer to alert.js in actions to look at\n// what's getting passed in as the payload in each dispatch","map":{"version":3,"sources":["/Users/asl/PROJECTS/simply-vegan/simply-vegan-frontend/src/reducers/alert.js"],"names":["SET_ALERT","REMOVE_ALERT","initialState","alertReducer","state","action","type","payload","filter","alert","id"],"mappings":"qLAAA,OACIA,SADJ,CAEIC,YAFJ,KAGO,kBAHP,CAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,GAAMC,CAAAA,YAAY,CAAG,EAArB,CAEA,cAAe,SAASC,CAAAA,YAAT,EAAoD,IAA9BC,CAAAA,KAA8B,2DAAtBF,YAAsB,IAARG,CAAAA,MAAQ,2CAC/D,GAAQC,CAAAA,IAAR,CAA0BD,MAA1B,CAAQC,IAAR,CAAcC,OAAd,CAA0BF,MAA1B,CAAcE,OAAd,CAEA,OAAQD,IAAR,EAEI,IAAKN,CAAAA,SAAL,CACI;AACA,mCAAWI,KAAX,GAAkBG,OAAlB,GAEJ,IAAKN,CAAAA,YAAL,CACI;AACA,MAAOG,CAAAA,KAAK,CAACI,MAAN,CAAc,SAAAC,KAAK,QAAIA,CAAAA,KAAK,CAACC,EAAN,GAAaH,OAAjB,EAAnB,CAAP,CAEJ,QACI,MAAOH,CAAAA,KAAP,CAXR,CAcH,CAED;AACA;AACA","sourcesContent":["import {\n    SET_ALERT,\n    REMOVE_ALERT\n} from '../actions/types'\n\n\n// format of inital state\n// [\n//     {\n//         msg: 'Logged in successfully',\n//         alertType; 'success'\n//         id: 1\n//     }\n// ]\n\nconst initialState = []\n\nexport default function alertReducer(state = initialState, action) {\n    const { type, payload } = action\n    \n    switch (type) {\n        \n        case SET_ALERT:\n            // payload here is { msg, alertType, id }zzz\n            return [...state, payload]\n        \n        case REMOVE_ALERT:\n            // payload here is just the id \n            return state.filter( alert => alert.id !== payload )\n    \n        default:\n            return state\n        \n    }\n}\n\n// if you're confused about why the payload is different\n// then refer to alert.js in actions to look at\n// what's getting passed in as the payload in each dispatch"]},"metadata":{},"sourceType":"module"}