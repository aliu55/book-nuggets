{"ast":null,"code":"var _jsxFileName = \"/Users/asl/PROJECTS/simply-vegan/simply-vegan-frontend/src/components/auth/Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './auth.css'; // redux actions\n\nimport { connect } from 'react-redux';\nimport { setAlert } from '../../actions/alert';\nimport { register } from '../../actions/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = ({\n  setAlert,\n  register,\n  isAuthenticated\n}) => {\n  _s();\n\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\"\n  });\n  const {\n    name,\n    email,\n    password\n  } = formData;\n\n  const onChange = e => {\n    setFormData({ ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    register({\n      name,\n      email,\n      password\n    });\n  };\n\n  if (isAuthenticated) {\n    console.log('isAuthenticated:', isAuthenticated);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: e => onSubmit(e),\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"sign up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"full name\",\n          name: \"name\",\n          value: name,\n          onChange: e => onChange(e),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"email\",\n          name: \"email\",\n          value: email,\n          onChange: e => onChange(e),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"password\",\n          minLength: \"6\",\n          name: \"password\",\n          value: password,\n          onChange: e => onChange(e),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        className: \"btn\",\n        value: \"create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Register, \"2sG7P1jAvrNxgyYG7hpX9NDQtw0=\");\n\n_c = Register;\nRegister.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, {\n  setAlert,\n  register\n})(Register);\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/asl/PROJECTS/simply-vegan/simply-vegan-frontend/src/components/auth/Register.js"],"names":["React","Fragment","useState","PropTypes","connect","setAlert","register","Register","isAuthenticated","formData","setFormData","name","email","password","onChange","e","target","value","onSubmit","preventDefault","console","log","propTypes","func","isRequired","bool","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport './auth.css'\n\n// redux actions\nimport { connect } from 'react-redux'\nimport { setAlert } from '../../actions/alert'\nimport { register } from '../../actions/auth'\n\nconst Register = ({ setAlert, register, isAuthenticated }) => {\n    const [formData, setFormData] = useState({\n        name: \"\",\n        email: \"\",\n        password: \"\",\n    })\n\n    const {\n        name,\n        email,\n        password\n    } = formData\n\n    const onChange = e => {\n        setFormData({ ...formData, [e.target.name]: e.target.value })\n    }\n\n    const onSubmit = e => {\n        e.preventDefault()\n        register({ name, email, password })\n    }\n\n    if (isAuthenticated) {\n        console.log('isAuthenticated:', isAuthenticated)\n    }\n    \n    return (\n        <Fragment>\n            <form className=\"form\" onSubmit={e => onSubmit(e)}>\n                <h2>sign up</h2>\n                <div className=\"form-group\">\n                    <input\n                        type=\"text\"\n                        placeholder=\"full name\"\n                        name=\"name\"\n                        value={name}\n                        onChange={e => onChange(e)}\n                        required\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <input\n                        type=\"email\"\n                        placeholder=\"email\"\n                        name=\"email\"\n                        value={email}\n                        onChange={e => onChange(e)}\n                        required\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <input\n                        type=\"password\"\n                        placeholder=\"password\"\n                        minLength=\"6\"\n                        name=\"password\"\n                        value={password}\n                        onChange={e => onChange(e)}\n                        required\n                    />\n                </div>\n                <input\n                    type=\"submit\"\n                    className=\"btn\"\n                    value=\"create\"\n                />\n            </form>\n        </Fragment>\n    )\n}\n\nRegister.propTypes = {\n    setAlert: PropTypes.func.isRequired,\n    isAuthenticated: PropTypes.bool\n}\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated\n})\n\nexport default connect(\n    mapStateToProps,\n    { setAlert, register }\n)(Register)\n"]},"metadata":{},"sourceType":"module"}