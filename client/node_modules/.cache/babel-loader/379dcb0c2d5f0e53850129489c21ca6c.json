{"ast":null,"code":"import axios from 'axios';\nimport config from '../config';\nimport { GET_BOOKS, GET_BOOK, BOOK_ERROR, ADD_BOOK, DELETE_BOOK, ADD_NOTE, DELETE_NOTE } from './types'; // book\n\nexport const getBooks = () => async dispatch => {\n  try {\n    const res = await axios.get(`${config.apiUrl}/books`);\n    console.log(res.data);\n    dispatch({\n      type: GET_BOOKS,\n      paylaod: res.data\n    });\n  } catch (err) {\n    console.log(\"ERROR:\", err.msg);\n    dispatch({\n      type: BOOK_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const getBook = book_id => async dispatch => {\n  try {\n    const res = await axios.post(`${config.apiUrl}/books/${book_id}`);\n    dispatch({\n      type: GET_BOOK,\n      paylaod: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: BOOK_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const deleteBook = book_id => async dispatch => {\n  try {\n    await axios.delete(`${config.apiUrl}/books/${book_id}`);\n    dispatch({\n      type: DELETE_BOOK,\n      payload: book_id\n    });\n  } catch (err) {\n    dispatch({\n      type: BOOK_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const addBook = formData => async dispatch => {\n  try {\n    const res = await axios.post(`${config.apiUrl}/books`, formData, config.apiConfig);\n    dispatch({\n      type: ADD_BOOK,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: BOOK_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // note","map":{"version":3,"sources":["/Users/asl/PROJECTS/simply-vegan/simply-vegan-frontend/src/actions/book.js"],"names":["axios","config","GET_BOOKS","GET_BOOK","BOOK_ERROR","ADD_BOOK","DELETE_BOOK","ADD_NOTE","DELETE_NOTE","getBooks","dispatch","res","get","apiUrl","console","log","data","type","paylaod","err","msg","payload","response","statusText","status","getBook","book_id","post","deleteBook","delete","addBook","formData","apiConfig"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport config from '../config'\nimport {\n    GET_BOOKS,\n    GET_BOOK,\n    BOOK_ERROR,\n    ADD_BOOK,\n    DELETE_BOOK,\n    ADD_NOTE,\n    DELETE_NOTE,\n} from './types'\n\n// book\nexport const getBooks = () => async (dispatch) => {\n    try {\n\n        const res = await axios.get(`${config.apiUrl}/books`)\n\n        console.log(res.data)\n\n        dispatch({\n            type: GET_BOOKS,\n            paylaod: res.data\n        })\n\n    } catch (err) {\n        console.log(\"ERROR:\", err.msg)\n        dispatch({\n            type: BOOK_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        })\n    }\n}\n\nexport const getBook = book_id => async (dispatch) => {\n    try {\n\n        const res = await axios.post(`${config.apiUrl}/books/${book_id}`)\n\n        dispatch({\n            type: GET_BOOK,\n            paylaod: res.data\n        })\n\n    } catch (err) {\n        dispatch({\n            type: BOOK_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        })\n    }\n}\n\nexport const deleteBook = book_id => async (dispatch) => {\n    try {\n        \n        await axios.delete(`${config.apiUrl}/books/${book_id}`)\n\n        dispatch({\n            type: DELETE_BOOK,\n            payload: book_id\n        })\n\n    } catch (err) {\n        dispatch({\n            type: BOOK_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status}\n        })\n    }\n}\n\nexport const addBook = formData => async (dispatch) => {\n    try {\n\n        const res = await axios.post(`${config.apiUrl}/books`, formData, config.apiConfig)\n    \n        dispatch({\n            type: ADD_BOOK,\n            payload: res.data\n        })\n        \n    } catch (err) {\n        dispatch({\n            type: BOOK_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status}\n        })\n    }\n\n}\n\n// note "]},"metadata":{},"sourceType":"module"}