{"ast":null,"code":"import _slicedToArray from\"/Users/asl/PROJECTS/simply-vegan/simply-vegan-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{Fragment,useState,useEffect}from'react';import'./Books.css';// components\nimport CreateBookModal from'./CreateBookModal';import BookItem from'./BookItem';import Spinner from'../layout/Spinner';// redux\nimport{connect}from'react-redux';import{getBooks}from'../../actions/book';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Books=function Books(_ref){var book=_ref.book,getBooks=_ref.getBooks;var books=book.books,loading=book.loading;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),showModal=_useState2[0],setShowModal=_useState2[1];useEffect(function(){getBooks();},[getBooks]);var refreshPage=function refreshPage(){setShowModal(false);getBooks();};return loading?/*#__PURE__*/_jsx(Spinner,{}):/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:showModal?'cards blur':'cards',children:[/*#__PURE__*/_jsx(\"div\",{className:\"card card-add\",onClick:function onClick(){return setShowModal(true);},children:/*#__PURE__*/_jsx(\"span\",{className:\"book-add-icon\",children:\"+\"})}),books.map(function(book){return/*#__PURE__*/_jsx(BookItem,{book:book},book._id);})]}),showModal&&/*#__PURE__*/_jsx(CreateBookModal,{onCancel:function onCancel(){return setShowModal(false);},onCreate:refreshPage})]});};var mapStateToProps=function mapStateToProps(state){return{book:state.book};};export default connect(mapStateToProps,{getBooks:getBooks})(Books);","map":{"version":3,"sources":["/Users/asl/PROJECTS/simply-vegan/simply-vegan-frontend/src/components/books/Books.js"],"names":["React","Fragment","useState","useEffect","CreateBookModal","BookItem","Spinner","connect","getBooks","Books","book","books","loading","showModal","setShowModal","refreshPage","map","_id","mapStateToProps","state"],"mappings":"6KAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,QAA1B,CAAoCC,SAApC,KAAqD,OAArD,CAEA,MAAO,aAAP,CAEA;AACA,MAAOC,CAAAA,eAAP,KAA4B,mBAA5B,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,MAAOC,CAAAA,OAAP,KAAoB,mBAApB,CAEA;AACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,QAAT,KAAyB,oBAAzB,C,wFAEA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,MAAwB,IAArBC,CAAAA,IAAqB,MAArBA,IAAqB,CAAfF,QAAe,MAAfA,QAAe,CAClC,GAAQG,CAAAA,KAAR,CAA2BD,IAA3B,CAAQC,KAAR,CAAeC,OAAf,CAA2BF,IAA3B,CAAeE,OAAf,CACA,cAAkCV,QAAQ,CAAC,KAAD,CAA1C,wCAAOW,SAAP,eAAkBC,YAAlB,eAEAX,SAAS,CAAC,UAAM,CACZK,QAAQ,GACX,CAFQ,CAEN,CAACA,QAAD,CAFM,CAAT,CAIA,GAAMO,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACtBD,YAAY,CAAC,KAAD,CAAZ,CACAN,QAAQ,GACX,CAHD,CAKA,MACII,CAAAA,OAAO,cACP,KAAC,OAAD,IADO,cAGP,MAAC,QAAD,yBACI,aAAK,SAAS,CAAEC,SAAS,CAAG,YAAH,CAAkB,OAA3C,wBACI,YAAK,SAAS,CAAC,eAAf,CAA+B,OAAO,CAAE,yBAAMC,CAAAA,YAAY,CAAC,IAAD,CAAlB,EAAxC,uBACI,aAAM,SAAS,CAAC,eAAhB,eADJ,EADJ,CAIKH,KAAK,CAACK,GAAN,CAAU,SAACN,IAAD,qBACP,KAAC,QAAD,EAAyB,IAAI,CAAEA,IAA/B,EAAeA,IAAI,CAACO,GAApB,CADO,EAAV,CAJL,GADJ,CAUKJ,SAAS,eACN,KAAC,eAAD,EACI,QAAQ,CAAE,0BAAMC,CAAAA,YAAY,CAAC,KAAD,CAAlB,EADd,CAEI,QAAQ,CAAEC,WAFd,EAXR,GAJJ,CAuBH,CApCD,CA2CA,GAAMG,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,QAAY,CAClCT,IAAI,CAAES,KAAK,CAACT,IADsB,CAAZ,EAAxB,CAIA,cAAeH,CAAAA,OAAO,CAACW,eAAD,CAAkB,CAAEV,QAAQ,CAARA,QAAF,CAAlB,CAAP,CAAuCC,KAAvC,CAAf","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport './Books.css'\n\n// components\nimport CreateBookModal from './CreateBookModal'\nimport BookItem from './BookItem'\nimport Spinner from '../layout/Spinner'\n\n// redux\nimport { connect } from 'react-redux'\nimport { getBooks } from '../../actions/book'\n\nconst Books = ({ book, getBooks }) => {\n    const { books, loading } = book\n    const [showModal, setShowModal] = useState(false)\n\n    useEffect(() => {\n        getBooks()\n    }, [getBooks])\n\n    const refreshPage = () => {\n        setShowModal(false)\n        getBooks()\n    }\n\n    return (\n        loading ? (\n        <Spinner />\n    ) : (\n        <Fragment>\n            <div className={showModal ? 'cards blur' : 'cards'}>\n                <div className=\"card card-add\" onClick={() => setShowModal(true)}>\n                    <span className=\"book-add-icon\">+</span>\n                </div>\n                {books.map((book) => (\n                    <BookItem key={book._id} book={book} />\n                ))}\n            </div>\n\n            {showModal && (\n                <CreateBookModal\n                    onCancel={() => setShowModal(false)}\n                    onCreate={refreshPage}\n                />\n            )}\n        </Fragment>\n    )\n  )\n}\n\nBooks.propTypes = {\n  book: PropTypes.object.isRequired,\n  getBooks: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = (state) => ({\n  book: state.book,\n})\n\nexport default connect(mapStateToProps, { getBooks })(Books)\n"]},"metadata":{},"sourceType":"module"}