{"ast":null,"code":"import axios from 'axios';\nimport config from '../config';\nimport { setAlert } from './alert';\nimport { GET_POSTS, DELETE_POST, UPDATE_LIKES, POST_ERROR } from './types';\nexport const getPosts = () => async dispatch => {\n  try {\n    const res = await axios.get(`${config.apiUrl}/posts`);\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data\n    });\n    dispatch(setAlert('Retrieved all posts successfully!', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const addLike = postId => async dispatch => {\n  try {\n    const res = await axios.put(`${config.apiUrl}/posts/like/${postId}`);\n    console.log('addLike RESPONSE:', res.data);\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const removeLike = postId => async dispatch => {\n  try {\n    const res = await axios.put(`${config.apiUrl}/posts/unlike/${postId}`);\n    console.log('removeLike RESPONSE:', res.data);\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};","map":{"version":3,"sources":["/Users/asl/PROJECTS/simply-vegan/simply-vegan-frontend/src/actions/post.js"],"names":["axios","config","setAlert","GET_POSTS","DELETE_POST","UPDATE_LIKES","POST_ERROR","getPosts","dispatch","res","get","apiUrl","type","payload","data","err","msg","response","statusText","status","addLike","postId","put","console","log","removeLike"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,SAASC,QAAT,QAAyB,SAAzB;AACA,SACIC,SADJ,EAEIC,WAFJ,EAGIC,YAHJ,EAIIC,UAJJ,QAKO,SALP;AAQA,OAAO,MAAMC,QAAQ,GAAG,MAAM,MAAOC,QAAP,IAAoB;AAC9C,MAAI;AAEA,UAAMC,GAAG,GAAG,MAAMT,KAAK,CAACU,GAAN,CAAW,GAAET,MAAM,CAACU,MAAO,QAA3B,CAAlB;AAEAH,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAET,SADD;AAELU,MAAAA,OAAO,EAAEJ,GAAG,CAACK;AAFR,KAAD,CAAR;AAKAN,IAAAA,QAAQ,CAACN,QAAQ,CAAC,mCAAD,EAAsC,SAAtC,CAAT,CAAR;AAEH,GAXD,CAWE,OAAOa,GAAP,EAAY;AACVP,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAEN,UADD;AAELO,MAAAA,OAAO,EAAE;AAAEG,QAAAA,GAAG,EAAED,GAAG,CAACE,QAAJ,CAAaC,UAApB;AAAgCC,QAAAA,MAAM,EAAEJ,GAAG,CAACE,QAAJ,CAAaE;AAArD;AAFJ,KAAD,CAAR;AAIH;AACJ,CAlBM;AAoBP,OAAO,MAAMC,OAAO,GAAGC,MAAM,IAAI,MAAOb,QAAP,IAAoB;AACjD,MAAI;AAEA,UAAMC,GAAG,GAAG,MAAMT,KAAK,CAACsB,GAAN,CAAW,GAAErB,MAAM,CAACU,MAAO,eAAcU,MAAO,EAAhD,CAAlB;AAEAE,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCf,GAAG,CAACK,IAArC;AAEAN,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAEP,YADD;AAELQ,MAAAA,OAAO,EAAEJ,GAAG,CAACK;AAFR,KAAD,CAAR;AAKH,GAXD,CAWE,OAAOC,GAAP,EAAY;AACVP,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAEN,UADD;AAELO,MAAAA,OAAO,EAAE;AAAEG,QAAAA,GAAG,EAAED,GAAG,CAACE,QAAJ,CAAaC,UAApB;AAAgCC,QAAAA,MAAM,EAAEJ,GAAG,CAACE,QAAJ,CAAaE;AAArD;AAFJ,KAAD,CAAR;AAIH;AACJ,CAlBM;AAoBP,OAAO,MAAMM,UAAU,GAAGJ,MAAM,IAAI,MAAOb,QAAP,IAAoB;AACpD,MAAI;AAEA,UAAMC,GAAG,GAAG,MAAMT,KAAK,CAACsB,GAAN,CAAW,GAAErB,MAAM,CAACU,MAAO,iBAAgBU,MAAO,EAAlD,CAAlB;AAEAE,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCf,GAAG,CAACK,IAAxC;AAEAN,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAEP,YADD;AAELQ,MAAAA,OAAO,EAAEJ,GAAG,CAACK;AAFR,KAAD,CAAR;AAKH,GAXD,CAWE,OAAOC,GAAP,EAAY;AACVP,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAEN,UADD;AAELO,MAAAA,OAAO,EAAE;AAAEG,QAAAA,GAAG,EAAED,GAAG,CAACE,QAAJ,CAAaC,UAApB;AAAgCC,QAAAA,MAAM,EAAEJ,GAAG,CAACE,QAAJ,CAAaE;AAArD;AAFJ,KAAD,CAAR;AAIH;AACJ,CAlBM","sourcesContent":["import axios from 'axios'\nimport config from '../config'\nimport { setAlert } from './alert'\nimport {\n    GET_POSTS,\n    DELETE_POST,\n    UPDATE_LIKES,\n    POST_ERROR\n} from './types'\n\n\nexport const getPosts = () => async (dispatch) => {\n    try {\n\n        const res = await axios.get(`${config.apiUrl}/posts`)\n\n        dispatch({\n            type: GET_POSTS,\n            payload: res.data\n        })\n\n        dispatch(setAlert('Retrieved all posts successfully!', 'success'))\n\n    } catch (err) {\n        dispatch({\n            type: POST_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        })\n    }\n}\n\nexport const addLike = postId => async (dispatch) => {\n    try {\n\n        const res = await axios.put(`${config.apiUrl}/posts/like/${postId}`)\n\n        console.log('addLike RESPONSE:', res.data)\n\n        dispatch({\n            type: UPDATE_LIKES,\n            payload: res.data\n        })\n\n    } catch (err) {\n        dispatch({\n            type: POST_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        })\n    }\n}\n\nexport const removeLike = postId => async (dispatch) => {\n    try {\n\n        const res = await axios.put(`${config.apiUrl}/posts/unlike/${postId}`)\n\n        console.log('removeLike RESPONSE:', res.data)\n\n        dispatch({\n            type: UPDATE_LIKES,\n            payload: res.data\n        })\n\n    } catch (err) {\n        dispatch({\n            type: POST_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        })\n    }\n}"]},"metadata":{},"sourceType":"module"}