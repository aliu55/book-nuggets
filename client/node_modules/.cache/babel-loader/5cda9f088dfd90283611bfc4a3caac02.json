{"ast":null,"code":"import React from'react';import{Link}from'react-router-dom';import'./PostItem.css';// font awesome\nimport{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faHeart as fasHeart}from'@fortawesome/free-solid-svg-icons';import{faComment,faHeart as farHeart}from'@fortawesome/free-regular-svg-icons';// redux\nimport{connect}from'react-redux';import{addLike,removeLike}from'../../actions/post';// components\nimport Moment from'react-moment';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var PostItem=function PostItem(_ref){var addLike=_ref.addLike,removeLike=_ref.removeLike,post=_ref.post,auth=_ref.auth,showActions=_ref.showActions;var _id=post._id,text=post.text,name=post.name,avatar=post.avatar,likes=post.likes,comments=post.comments,date=post.date;var changeLike=function changeLike(){hasLiked()?removeLike(_id):addLike(_id);};var hasLiked=function hasLiked(){return likes.filter(function(like){return like.user===auth.user._id;}).length>0;};return/*#__PURE__*/_jsxs(\"div\",{className:\"post\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"post-info\",children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"img\",{className:\"post-img\",src:avatar,alt:\"\"})}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{className:\"post-user\",children:name}),/*#__PURE__*/_jsxs(\"p\",{className:\"post-date\",children:[\"Posted on \",/*#__PURE__*/_jsx(Moment,{format:\"YYYY/MM/DD\",children:date})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{children:text}),/*#__PURE__*/_jsxs(\"button\",{className:\"post-actions\",onClick:function onClick(e){return changeLike();},children:[/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:hasLiked()?fasHeart:farHeart,className:\"post-icon\"}),' ',/*#__PURE__*/_jsx(\"span\",{children:likes.length})]}),/*#__PURE__*/_jsxs(Link,{to:\"/community/\".concat(_id),className:\"post-actions comment\",children:[/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faComment,className:\"post-icon\"}),' ',/*#__PURE__*/_jsx(\"span\",{children:comments.length})]})]})]});};var mapStateToProps=function mapStateToProps(state){return{auth:state.auth};};export default connect(mapStateToProps,{addLike:addLike,removeLike:removeLike})(PostItem);","map":{"version":3,"sources":["/Users/asl/PROJECTS/simply-vegan/simply-vegan-frontend/src/components/posts/PostItem.js"],"names":["React","Link","FontAwesomeIcon","faHeart","fasHeart","faComment","farHeart","connect","addLike","removeLike","Moment","PostItem","post","auth","showActions","_id","text","name","avatar","likes","comments","date","changeLike","hasLiked","filter","like","user","length","e","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\nimport './PostItem.css'\n\n// font awesome\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faHeart as fasHeart } from '@fortawesome/free-solid-svg-icons'\nimport {\n  faComment,\n  faHeart as farHeart,\n} from '@fortawesome/free-regular-svg-icons'\n\n// redux\nimport { connect } from 'react-redux'\nimport { addLike, removeLike } from '../../actions/post'\n\n// components\nimport Moment from 'react-moment'\n\nconst PostItem = ({ addLike, removeLike, post, auth, showActions }) => {\n  const { _id, text, name, avatar, likes, comments, date } = post\n\n  const changeLike = () => {\n    hasLiked() ? removeLike(_id) : addLike(_id)\n  }\n\n  const hasLiked = () => {\n    return likes.filter((like) => like.user === auth.user._id).length > 0\n  }\n\n  return (\n    <div className=\"post\">\n      <div className=\"post-info\">\n        <div>\n          <img className=\"post-img\" src={avatar} alt=\"\" />\n        </div>\n        <div>\n          <p className=\"post-user\">{name}</p>\n          <p className=\"post-date\">\n            Posted on <Moment format=\"YYYY/MM/DD\">{date}</Moment>\n          </p>\n        </div>\n      </div>\n      <div>\n        <p>{text}</p>\n        <button className=\"post-actions\" onClick={(e) => changeLike()}>\n          <FontAwesomeIcon\n            icon={hasLiked() ? fasHeart : farHeart}\n            className=\"post-icon\"\n          />{' '}\n          <span>{likes.length}</span>\n        </button>\n\n        <Link to={`/community/${_id}`} className=\"post-actions comment\">\n          <FontAwesomeIcon icon={faComment} className=\"post-icon\" />{' '}\n          <span>{comments.length}</span>\n        </Link>\n      </div>\n    </div>\n  )\n}\n\nPostItem.propTypes = {\n  post: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n})\n\nexport default connect(mapStateToProps, { addLike, removeLike })(PostItem)\n"]},"metadata":{},"sourceType":"module"}