{"ast":null,"code":"var _jsxFileName = \"/Users/asl/PROJECTS/simply-vegan/simply-vegan-frontend/src/components/posts/PostItem.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport './PostItem.css'; // font awesome\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHeart as fasHeart } from '@fortawesome/free-solid-svg-icons';\nimport { faComment, faHeart as farHeart } from '@fortawesome/free-regular-svg-icons'; // redux\n\nimport { connect } from 'react-redux';\nimport { addLike, removeLike } from '../../actions/post'; // components\n\nimport Moment from 'react-moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostItem = ({\n  addLike,\n  removeLike,\n  post,\n  auth,\n  showActions\n}) => {\n  _s();\n\n  const {\n    _id,\n    text,\n    name,\n    avatar,\n    likes,\n    comments,\n    date\n  } = post;\n  const [temp, setTemp] = useState([]);\n\n  const changeLike = () => {\n    hasLiked() ? removeLike(_id) : addLike(_id);\n  };\n\n  const hasLiked = () => {\n    return likes.filter(like => like.user === auth.user._id).length > 0;\n  };\n\n  const changeTemp = () => {\n    console.log(temp);\n    setTemp(...temp, 'hello');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"post-img\",\n          src: avatar,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"post-user\",\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"post-date\",\n          children: [\"Posted on \", /*#__PURE__*/_jsxDEV(Moment, {\n            format: \"YYYY/MM/DD\",\n            children: date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"post-actions\",\n        onClick: e => changeLike(),\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: hasLiked() ? fasHeart : farHeart,\n          className: \"post-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n          children: likes.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => changeTemp(),\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"TEMP \", temp.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/post/${_id}`,\n        className: \"post-actions comment\",\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faComment,\n          className: \"post-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n          children: comments.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PostItem, \"tOGKiQH860sBUl0tMbcnBxn8pDI=\");\n\n_c = PostItem;\nPostItem.propTypes = {\n  post: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  addLike,\n  removeLike\n})(PostItem);\n\nvar _c;\n\n$RefreshReg$(_c, \"PostItem\");","map":{"version":3,"sources":["/Users/asl/PROJECTS/simply-vegan/simply-vegan-frontend/src/components/posts/PostItem.js"],"names":["React","Fragment","useState","PropTypes","Link","FontAwesomeIcon","faHeart","fasHeart","faComment","farHeart","connect","addLike","removeLike","Moment","PostItem","post","auth","showActions","_id","text","name","avatar","likes","comments","date","temp","setTemp","changeLike","hasLiked","filter","like","user","length","changeTemp","console","log","e","propTypes","object","isRequired","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\nimport './PostItem.css'\n\n// font awesome\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faHeart as fasHeart } from '@fortawesome/free-solid-svg-icons'\nimport {\n  faComment,\n  faHeart as farHeart,\n} from '@fortawesome/free-regular-svg-icons'\n\n// redux\nimport { connect } from 'react-redux'\nimport { addLike, removeLike } from '../../actions/post'\n\n// components\nimport Moment from 'react-moment'\n\nconst PostItem = ({ addLike, removeLike, post, auth, showActions }) => {\n    const { _id, text, name, avatar, likes, comments, date } = post\n\n    const [temp, setTemp] = useState([])\n\n  const changeLike = () => {\n      hasLiked() ? removeLike(_id) : addLike(_id)\n  }\n\n  const hasLiked = () => {\n    return likes.filter(like => like.user === auth.user._id).length > 0\n  }\n    \n    const changeTemp = () => {\n        console.log(temp)\n        setTemp(...temp, 'hello')\n    }\n\n  return (\n    <div className=\"post\">\n      <div className=\"post-info\">\n        <div>\n          <img className=\"post-img\" src={avatar} alt=\"\" />\n        </div>\n        <div>\n          <p className=\"post-user\">{name}</p>\n          <p className=\"post-date\">\n            Posted on <Moment format=\"YYYY/MM/DD\">{date}</Moment>\n          </p>\n        </div>\n      </div>\n      <div>\n        <p>{text}</p>\n        <button className=\"post-actions\" onClick={(e) => changeLike()}>\n          <FontAwesomeIcon\n            icon={hasLiked() ? fasHeart : farHeart}\n            className=\"post-icon\"\n          />{' '}\n          <span>{likes.length}</span>\n        </button>\n        <button onClick={e => changeTemp()}>\n          <span>TEMP {temp.length}</span>          \n        </button>\n        <Link to={`/post/${_id}`} className=\"post-actions comment\">\n          <FontAwesomeIcon icon={faComment} className=\"post-icon\" />{' '}\n          <span>{comments.length}</span>\n        </Link>\n      </div>\n    </div>\n  )\n}\n\nPostItem.propTypes = {\n  post: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n})\n\nexport default connect(mapStateToProps, { addLike, removeLike })(PostItem)\n"]},"metadata":{},"sourceType":"module"}