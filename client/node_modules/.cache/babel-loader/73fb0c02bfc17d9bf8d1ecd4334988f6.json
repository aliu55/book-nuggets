{"ast":null,"code":"var _jsxFileName = \"/Users/asl/PROJECTS/simply-vegan/simply-vegan-frontend/src/components/dashboard/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './Dashboard.css'; // components\n\nimport Spinner from '../layout/Spinner';\nimport { Link } from 'react-router-dom';\nimport Books from '../books/Books'; // redux\n\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = ({\n  auth\n}) => {\n  _s();\n\n  const [showModal, setShowModal] = useState(false);\n\n  const refreshPage = () => {\n    setShowModal(false); // call redux action getBooks again\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Books, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Dashboard, \"uVlnG5KLfXemZk5i5Fl+Cg356FU=\");\n\n_c = Dashboard;\nDashboard.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(Dashboard);\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/Users/asl/PROJECTS/simply-vegan/simply-vegan-frontend/src/components/dashboard/Dashboard.js"],"names":["React","Fragment","useState","PropTypes","Spinner","Link","Books","connect","Dashboard","auth","showModal","setShowModal","refreshPage","propTypes","object","isRequired","mapStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,iBAAP,C,CAEA;;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,KAAP,MAAkB,gBAAlB,C,CAEA;;AACA,SAASC,OAAT,QAAwB,aAAxB;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAAA;;AAC9B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,KAAD,CAA1C;;AAEA,QAAMU,WAAW,GAAG,MAAM;AACxBD,IAAAA,YAAY,CAAC,KAAD,CAAZ,CADwB,CAExB;AACD,GAHD;;AAKA,sBACE,QAAC,QAAD;AAAA,2BACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAbD;;GAAMH,S;;KAAAA,S;AAeNA,SAAS,CAACK,SAAV,GAAsB;AACpBJ,EAAAA,IAAI,EAAEN,SAAS,CAACW,MAAV,CAAiBC;AADH,CAAtB;;AAIA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCR,EAAAA,IAAI,EAAEQ,KAAK,CAACR;AADsB,CAAZ,CAAxB;;AAIA,eAAeF,OAAO,CAACS,eAAD,CAAP,CAAyBR,SAAzB,CAAf","sourcesContent":["import React, { Fragment, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport './Dashboard.css'\n\n// components\nimport Spinner from '../layout/Spinner'\nimport { Link } from 'react-router-dom'\nimport Books from '../books/Books'\n\n// redux\nimport { connect } from 'react-redux'\n\nconst Dashboard = ({ auth }) => {\n  const [showModal, setShowModal] = useState(false)\n\n  const refreshPage = () => {\n    setShowModal(false)\n    // call redux action getBooks again\n  }\n\n  return (\n    <Fragment>\n      <Books />\n    </Fragment>\n  )\n}\n\nDashboard.propTypes = {\n  auth: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n})\n\nexport default connect(mapStateToProps)(Dashboard)\n"]},"metadata":{},"sourceType":"module"}