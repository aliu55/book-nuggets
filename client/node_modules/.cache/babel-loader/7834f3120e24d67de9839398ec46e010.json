{"ast":null,"code":"import _slicedToArray from\"/Users/asl/PROJECTS/simply-vegan/simply-vegan-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{Fragment,useEffect,useState}from'react';import'./Notes.css';// components\nimport Spinner from'../layout/Spinner';import NoteItem from'./NoteItem';import AddButton from'../layout/AddButton';import CreateNoteModal from'./CreateNoteModal';// redux\nimport{getBook}from'../../actions/book';import{connect}from'react-redux';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Notes=function Notes(_ref){var getBook=_ref.getBook,_ref$book=_ref.book,book=_ref$book.book,loading=_ref$book.loading,match=_ref.match;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),showModal=_useState2[0],setShowModal=_useState2[1];useEffect(function(){getBook(match.params.book_id);},[getBook]);var refreshPage=function refreshPage(){setShowModal(false);getBook(match.params.book_id);};return loading||book===null?/*#__PURE__*/_jsx(Spinner,{}):/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:showModal?'notes blur':'notes',children:[/*#__PURE__*/_jsx(\"h1\",{className:\"title\",children:book.title}),/*#__PURE__*/_jsx(\"div\",{className:\"note-add\",onClick:function onClick(){return setShowModal(true);},children:/*#__PURE__*/_jsx(\"span\",{className:\"note-add-icon\",children:\"+\"})}),book.notes.map(function(note){return/*#__PURE__*/_jsx(NoteItem,{note:note,bookId:book._id},note._id);})]}),showModal&&/*#__PURE__*/_jsx(CreateNoteModal,{onCancel:function onCancel(){return setShowModal(false);},onCreate:refreshPage,bookId:book._id})]});};var mapStateToProps=function mapStateToProps(state){return{book:state.book};};export default connect(mapStateToProps,{getBook:getBook})(Notes);","map":{"version":3,"sources":["/Users/asl/PROJECTS/simply-vegan/simply-vegan-frontend/src/components/notes/Notes.js"],"names":["React","Fragment","useEffect","useState","Spinner","NoteItem","AddButton","CreateNoteModal","getBook","connect","Notes","book","loading","match","showModal","setShowModal","params","book_id","refreshPage","title","notes","map","note","_id","mapStateToProps","state"],"mappings":"6KAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,CAAqCC,QAArC,KAAqD,OAArD,CAEA,MAAO,aAAP,CAEA;AACA,MAAOC,CAAAA,OAAP,KAAoB,mBAApB,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,MAAOC,CAAAA,SAAP,KAAsB,qBAAtB,CACA,MAAOC,CAAAA,eAAP,KAA4B,mBAA5B,CAEA;AACA,OAASC,OAAT,KAAwB,oBAAxB,CACA,OAASC,OAAT,KAAwB,aAAxB,C,wFAEA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,MAAiD,IAA9CF,CAAAA,OAA8C,MAA9CA,OAA8C,gBAArCG,IAAqC,CAA7BA,IAA6B,WAA7BA,IAA6B,CAAvBC,OAAuB,WAAvBA,OAAuB,CAAZC,KAAY,MAAZA,KAAY,CAC7D,cAAkCV,QAAQ,CAAC,KAAD,CAA1C,wCAAOW,SAAP,eAAkBC,YAAlB,eAEAb,SAAS,CAAC,UAAM,CACdM,OAAO,CAACK,KAAK,CAACG,MAAN,CAAaC,OAAd,CAAP,CACD,CAFQ,CAEN,CAACT,OAAD,CAFM,CAAT,CAIA,GAAMU,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACxBH,YAAY,CAAC,KAAD,CAAZ,CACAP,OAAO,CAACK,KAAK,CAACG,MAAN,CAAaC,OAAd,CAAP,CACD,CAHD,CAKA,MAAOL,CAAAA,OAAO,EAAID,IAAI,GAAK,IAApB,cACL,KAAC,OAAD,IADK,cAGL,MAAC,QAAD,yBAQE,aAAK,SAAS,CAAEG,SAAS,CAAG,YAAH,CAAkB,OAA3C,wBACE,WAAI,SAAS,CAAC,OAAd,UAAuBH,IAAI,CAACQ,KAA5B,EADF,cAGE,YAAK,SAAS,CAAC,UAAf,CAA0B,OAAO,CAAE,yBAAMJ,CAAAA,YAAY,CAAC,IAAD,CAAlB,EAAnC,uBACE,aAAM,SAAS,CAAC,eAAhB,eADF,EAHF,CAOGJ,IAAI,CAACS,KAAL,CAAWC,GAAX,CAAe,SAACC,IAAD,qBACd,KAAC,QAAD,EAAyB,IAAI,CAAEA,IAA/B,CAAqC,MAAM,CAAEX,IAAI,CAACY,GAAlD,EAAeD,IAAI,CAACC,GAApB,CADc,EAAf,CAPH,GARF,CAoBGT,SAAS,eACR,KAAC,eAAD,EACE,QAAQ,CAAE,0BAAMC,CAAAA,YAAY,CAAC,KAAD,CAAlB,EADZ,CAEE,QAAQ,CAAEG,WAFZ,CAGE,MAAM,CAAEP,IAAI,CAACY,GAHf,EArBJ,GAHF,CAgCD,CA5CD,CAmDA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,QAAY,CAClCd,IAAI,CAAEc,KAAK,CAACd,IADsB,CAAZ,EAAxB,CAIA,cAAeF,CAAAA,OAAO,CAACe,eAAD,CAAkB,CAAEhB,OAAO,CAAPA,OAAF,CAAlB,CAAP,CAAsCE,KAAtC,CAAf","sourcesContent":["import React, { Fragment, useEffect, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport './Notes.css'\n\n// components\nimport Spinner from '../layout/Spinner'\nimport NoteItem from './NoteItem'\nimport AddButton from '../layout/AddButton'\nimport CreateNoteModal from './CreateNoteModal'\n\n// redux\nimport { getBook } from '../../actions/book'\nimport { connect } from 'react-redux'\n\nconst Notes = ({ getBook, book: { book, loading }, match }) => {\n  const [showModal, setShowModal] = useState(false)\n\n  useEffect(() => {\n    getBook(match.params.book_id)\n  }, [getBook])\n\n  const refreshPage = () => {\n    setShowModal(false)\n    getBook(match.params.book_id)\n  }\n\n  return loading || book === null ? (\n    <Spinner />\n  ) : (\n    <Fragment>\n      {/* <AddButton />\n      <div className=\"notes\">\n        {book.notes.map((note) => (\n          <NoteItem key={note._id} note={note} bookId={book._id} />\n        ))}\n      </div> */}\n\n      <div className={showModal ? 'notes blur' : 'notes'}>\n        <h1 className=\"title\">{book.title}</h1>\n\n        <div className=\"note-add\" onClick={() => setShowModal(true)}>\n          <span className=\"note-add-icon\">+</span>\n        </div>\n\n        {book.notes.map((note) => (\n          <NoteItem key={note._id} note={note} bookId={book._id} />\n        ))}\n      </div>\n\n      {showModal && (\n        <CreateNoteModal\n          onCancel={() => setShowModal(false)}\n          onCreate={refreshPage}\n          bookId={book._id}\n        />\n      )}\n    </Fragment>\n  )\n}\n\nNotes.propTypes = {\n  getBook: PropTypes.func.isRequired,\n  book: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = (state) => ({\n  book: state.book,\n})\n\nexport default connect(mapStateToProps, { getBook })(Notes)\n"]},"metadata":{},"sourceType":"module"}