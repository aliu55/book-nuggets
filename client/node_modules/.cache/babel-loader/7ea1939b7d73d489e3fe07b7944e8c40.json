{"ast":null,"code":"import'./App.css';// tools\nimport React,{useEffect}from'react';import{BrowserRouter as Router,Route,Switch}from'react-router-dom';// components\nimport Navbar from'./components/layout/Navbar';import Home from'./components/layout/Home';import Alert from'./components/layout/Alert';import Register from'./components/auth/Register';import Login from'./components/auth/Login';import Dashboard from'./components/dashboard/Dashboard';import ProtectedRoute from'./components/routes/ProtectedRoute';import Posts from'./components/posts/Posts';import Post from'./components/post/Post';import Notes from'./components/notes/Notes';import NoteItem from'./components/notes/NoteItem';// redux\nimport store from'./store';import{Provider}from'react-redux';import{getUser}from'./actions/auth';import setAuthToken from'./utils/setAuthToken';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";if(localStorage.token){setAuthToken(localStorage.token);}function App(){useEffect(function(){store.dispatch(getUser());},[]);return/*#__PURE__*/_jsx(Provider,{store:store,children:/*#__PURE__*/_jsxs(Router,{children:[/*#__PURE__*/_jsx(Navbar,{}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/\",component:Home}),/*#__PURE__*/_jsxs(\"section\",{className:\"container\",children:[/*#__PURE__*/_jsx(Alert,{}),/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Route,{exact:true,path:\"/register\",component:Register}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/login\",component:Login}),/*#__PURE__*/_jsx(ProtectedRoute,{exact:true,path:\"/dashboard\",component:Dashboard}),/*#__PURE__*/_jsx(ProtectedRoute,{exact:true,path:\"/community\",component:Posts}),/*#__PURE__*/_jsx(ProtectedRoute,{exact:true,path:\"/community/:post_id\",component:Post}),/*#__PURE__*/_jsx(ProtectedRoute,{exact:true,path:\"/book/:book_id\",component:Notes}),/*#__PURE__*/_jsx(ProtectedRoute,{exact:true,path:\"/book/:book_id/:note_id\",component:NoteItem})]})]})]})});}export default App;","map":{"version":3,"sources":["/Users/asl/PROJECTS/simply-vegan/simply-vegan-frontend/src/App.js"],"names":["React","useEffect","BrowserRouter","Router","Route","Switch","Navbar","Home","Alert","Register","Login","Dashboard","ProtectedRoute","Posts","Post","Notes","NoteItem","store","Provider","getUser","setAuthToken","localStorage","token","App","dispatch"],"mappings":"AAAA,MAAO,WAAP,CACA;AACA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,aAAa,GAAIC,CAAAA,MAA1B,CAAkCC,KAAlC,CAAyCC,MAAzC,KAAuD,kBAAvD,CAEA;AACA,MAAOC,CAAAA,MAAP,KAAmB,4BAAnB,CACA,MAAOC,CAAAA,IAAP,KAAiB,0BAAjB,CACA,MAAOC,CAAAA,KAAP,KAAkB,2BAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,4BAArB,CACA,MAAOC,CAAAA,KAAP,KAAkB,yBAAlB,CACA,MAAOC,CAAAA,SAAP,KAAsB,kCAAtB,CACA,MAAOC,CAAAA,cAAP,KAA2B,oCAA3B,CACA,MAAOC,CAAAA,KAAP,KAAkB,0BAAlB,CACA,MAAOC,CAAAA,IAAP,KAAiB,wBAAjB,CACA,MAAOC,CAAAA,KAAP,KAAkB,0BAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,6BAArB,CAEA;AACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CACA,OAASC,QAAT,KAAyB,aAAzB,CACA,OAASC,OAAT,KAAwB,gBAAxB,CACA,MAAOC,CAAAA,YAAP,KAAyB,sBAAzB,C,wFAEA,GAAIC,YAAY,CAACC,KAAjB,CAAwB,CACtBF,YAAY,CAACC,YAAY,CAACC,KAAd,CAAZ,CACD,CAED,QAASC,CAAAA,GAAT,EAAe,CAEbtB,SAAS,CAAC,UAAM,CACdgB,KAAK,CAACO,QAAN,CAAeL,OAAO,EAAtB,EACD,CAFQ,CAEN,EAFM,CAAT,CAIA,mBACE,KAAC,QAAD,EAAU,KAAK,CAAEF,KAAjB,uBACE,MAAC,MAAD,yBAEE,KAAC,MAAD,IAFF,cAGE,KAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,GAAlB,CAAsB,SAAS,CAAEV,IAAjC,EAHF,cAKE,iBAAS,SAAS,CAAC,WAAnB,wBACE,KAAC,KAAD,IADF,cAEE,MAAC,MAAD,yBACE,KAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,WAAlB,CAA8B,SAAS,CAAEE,QAAzC,EADF,cAEE,KAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,QAAlB,CAA2B,SAAS,CAAEC,KAAtC,EAFF,cAGE,KAAC,cAAD,EAAgB,KAAK,KAArB,CAAsB,IAAI,CAAC,YAA3B,CAAwC,SAAS,CAAEC,SAAnD,EAHF,cAIE,KAAC,cAAD,EAAgB,KAAK,KAArB,CAAsB,IAAI,CAAC,YAA3B,CAAwC,SAAS,CAAEE,KAAnD,EAJF,cAKE,KAAC,cAAD,EAAgB,KAAK,KAArB,CAAsB,IAAI,CAAC,qBAA3B,CAAiD,SAAS,CAAEC,IAA5D,EALF,cAME,KAAC,cAAD,EAAgB,KAAK,KAArB,CAAsB,IAAI,CAAC,gBAA3B,CAA4C,SAAS,CAAEC,KAAvD,EANF,cAOE,KAAC,cAAD,EAAgB,KAAK,KAArB,CAAsB,IAAI,CAAC,yBAA3B,CAAqD,SAAS,CAAEC,QAAhE,EAPF,GAFF,GALF,GADF,EADF,CAuBD,CAED,cAAeO,CAAAA,GAAf","sourcesContent":["import './App.css';\n// tools\nimport React, { useEffect } from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\n\n// components\nimport Navbar from './components/layout/Navbar'\nimport Home from './components/layout/Home'\nimport Alert from './components/layout/Alert'\nimport Register from './components/auth/Register'\nimport Login from './components/auth/Login'\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProtectedRoute from './components/routes/ProtectedRoute';\nimport Posts from './components/posts/Posts';\nimport Post from './components/post/Post';\nimport Notes from './components/notes/Notes';\nimport NoteItem from './components/notes/NoteItem';\n\n// redux\nimport store from './store'\nimport { Provider } from 'react-redux'\nimport { getUser } from './actions/auth'\nimport setAuthToken from './utils/setAuthToken';\n\nif (localStorage.token) {\n  setAuthToken(localStorage.token)\n}\n\nfunction App() {\n  \n  useEffect(() => {\n    store.dispatch(getUser())\n  }, [])\n  \n  return (\n    <Provider store={store}>\n      <Router>\n        \n        <Navbar />\n        <Route exact path=\"/\" component={Home} />\n        \n        <section className=\"container\">\n          <Alert />\n          <Switch>\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/login\" component={Login} />\n            <ProtectedRoute exact path=\"/dashboard\" component={Dashboard} />\n            <ProtectedRoute exact path=\"/community\" component={Posts} />\n            <ProtectedRoute exact path=\"/community/:post_id\" component={Post} />\n            <ProtectedRoute exact path=\"/book/:book_id\" component={Notes} />\n            <ProtectedRoute exact path=\"/book/:book_id/:note_id\" component={NoteItem} />\n          </Switch>\n        </section>\n        \n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}