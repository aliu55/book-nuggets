{"ast":null,"code":"var _jsxFileName = \"/Users/asl/PROJECTS/simply-vegan/simply-vegan-frontend/src/components/routes/ProtectedRoute.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types'; // router\n\nimport { Route, Redirect } from 'react-router-dom'; // redux\n\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProtectedRoute = ({\n  component: Component,\n  auth,\n  ...rest\n}) => {\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => !auth.isAuthenticated && !auth.loading ? /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(Component, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ProtectedRoute;\nProtectedRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(ProtectedRoute);\n\nvar _c;\n\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"sources":["/Users/asl/PROJECTS/simply-vegan/simply-vegan-frontend/src/components/routes/ProtectedRoute.js"],"names":["React","PropTypes","Route","Redirect","connect","ProtectedRoute","component","Component","auth","rest","props","isAuthenticated","loading","propTypes","object","isRequired","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC,C,CAEA;;AACA,SAASC,OAAT,QAAwB,aAAxB;;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwBC,EAAAA,IAAxB;AAA8B,KAAGC;AAAjC,CAAD,KAA6C;AAClE,sBACE,QAAC,KAAD,OACMA,IADN;AAEE,IAAA,MAAM,EAAGC,KAAD,IACN,CAACF,IAAI,CAACG,eAAN,IAAyB,CAACH,IAAI,CAACI,OAA/B,gBACE,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YADF,gBAGE,QAAC,SAAD,OAAeF;AAAf;AAAA;AAAA;AAAA;AAAA;AANN;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAbD;;KAAML,c;AAeNA,cAAc,CAACQ,SAAf,GAA2B;AACvBL,EAAAA,IAAI,EAAEP,SAAS,CAACa,MAAV,CAAiBC;AADA,CAA3B;;AAIA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCT,EAAAA,IAAI,EAAES,KAAK,CAACT;AADsB,CAAZ,CAAxB;;AAIA,eAAeJ,OAAO,CAACY,eAAD,CAAP,CAAyBX,cAAzB,CAAf","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\n// router\nimport { Route, Redirect } from 'react-router-dom'\n\n// redux\nimport { connect } from 'react-redux'\n\nconst ProtectedRoute = ({ component: Component, auth, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        !auth.isAuthenticated && !auth.loading ? (\n          <Redirect to=\"/login\" />\n        ) : (\n          <Component {...props} />\n        )\n      }\n    />\n  )\n}\n\nProtectedRoute.propTypes = {\n    auth: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n})\n\nexport default connect(mapStateToProps)(ProtectedRoute)\n"]},"metadata":{},"sourceType":"module"}