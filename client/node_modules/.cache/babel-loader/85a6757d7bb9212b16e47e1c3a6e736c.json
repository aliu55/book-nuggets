{"ast":null,"code":"import React,{Fragment}from'react';import{Link}from'react-router-dom';import'./Navbar.css';// redux\nimport{connect}from'react-redux';import{logout}from'../../actions/auth';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Navbar=function Navbar(_ref){var logout=_ref.logout,_ref$auth=_ref.auth,isAuthenticated=_ref$auth.isAuthenticated,loading=_ref$auth.loading;var privateNavbar=/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsx(\"li\",{className:\"menu-link\",children:/*#__PURE__*/_jsx(Link,{to:\"/dashboard\",children:\"dashboard\"})}),/*#__PURE__*/_jsx(\"li\",{className:\"menu-link\",children:/*#__PURE__*/_jsx(Link,{to:\"/community\",className:\"underline\",children:\"community\"})}),/*#__PURE__*/_jsx(\"li\",{className:\"menu-link\",children:/*#__PURE__*/_jsx(\"a\",{href:\"\",onClick:logout,children:\"logout\"})})]});var publicNavbar=/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsx(\"li\",{className:\"menu-link\",children:/*#__PURE__*/_jsx(Link,{to:\"/community\",children:\"community\"})}),/*#__PURE__*/_jsx(\"li\",{className:\"menu-link\",children:/*#__PURE__*/_jsx(Link,{to:\"/register\",className:\"underline\",children:\"sign up\"})}),/*#__PURE__*/_jsx(\"li\",{className:\"menu-link\",children:/*#__PURE__*/_jsx(Link,{to:\"/login\",children:\"sign in\"})})]});return/*#__PURE__*/_jsxs(\"nav\",{className:\"navbar bg-green\",children:[/*#__PURE__*/_jsx(\"h1\",{children:/*#__PURE__*/_jsx(Link,{to:\"/\",children:\"book nuggets\"})}),!loading&&/*#__PURE__*/_jsx(Fragment,{children:isAuthenticated?privateNavbar:publicNavbar})]});};var mapStateToProps=function mapStateToProps(state){return{auth:state.auth};};export default connect(mapStateToProps,{logout:logout})(Navbar);","map":{"version":3,"sources":["/Users/asl/PROJECTS/simply-vegan/simply-vegan-frontend/src/components/layout/Navbar.js"],"names":["React","Fragment","Link","connect","logout","Navbar","auth","isAuthenticated","loading","privateNavbar","publicNavbar","mapStateToProps","state"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CAEA,OAASC,IAAT,KAAqB,kBAArB,CACA,MAAO,cAAP,CAEA;AACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,MAAT,KAAuB,oBAAvB,C,wFAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,MAAoD,IAAjDD,CAAAA,MAAiD,MAAjDA,MAAiD,gBAAzCE,IAAyC,CAAjCC,eAAiC,WAAjCA,eAAiC,CAAhBC,OAAgB,WAAhBA,OAAgB,CACjE,GAAMC,CAAAA,aAAa,cACjB,mCACE,WAAI,SAAS,CAAC,WAAd,uBACE,KAAC,IAAD,EAAM,EAAE,CAAC,YAAT,uBADF,EADF,cAIE,WAAI,SAAS,CAAC,WAAd,uBACE,KAAC,IAAD,EAAM,EAAE,CAAC,YAAT,CAAsB,SAAS,CAAC,WAAhC,uBADF,EAJF,cAUE,WAAI,SAAS,CAAC,WAAd,uBACE,UAAG,IAAI,CAAC,EAAR,CAAW,OAAO,CAAEL,MAApB,oBADF,EAVF,GADF,CAmBA,GAAMM,CAAAA,YAAY,cAChB,mCACE,WAAI,SAAS,CAAC,WAAd,uBACE,KAAC,IAAD,EAAM,EAAE,CAAC,YAAT,uBADF,EADF,cAIE,WAAI,SAAS,CAAC,WAAd,uBACE,KAAC,IAAD,EAAM,EAAE,CAAC,WAAT,CAAqB,SAAS,CAAC,WAA/B,qBADF,EAJF,cASE,WAAI,SAAS,CAAC,WAAd,uBACE,KAAC,IAAD,EAAM,EAAE,CAAC,QAAT,qBADF,EATF,GADF,CAgBA,mBACE,aAAK,SAAS,CAAC,iBAAf,wBACE,iCACE,KAAC,IAAD,EAAM,EAAE,CAAC,GAAT,0BADF,EADF,CAIG,CAACF,OAAD,eACC,KAAC,QAAD,WAAWD,eAAe,CAAGE,aAAH,CAAmBC,YAA7C,EALJ,GADF,CAUD,CA9CD,CAqDA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,QAAY,CAClCN,IAAI,CAAEM,KAAK,CAACN,IADsB,CAAZ,EAAxB,CAIA,cAAeH,CAAAA,OAAO,CAACQ,eAAD,CAAkB,CAAEP,MAAM,CAANA,MAAF,CAAlB,CAAP,CAAqCC,MAArC,CAAf","sourcesContent":["import React, { Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\nimport './Navbar.css'\n\n// redux\nimport { connect } from 'react-redux'\nimport { logout } from '../../actions/auth'\n\nconst Navbar = ({ logout, auth: { isAuthenticated, loading } }) => {\n  const privateNavbar = (\n    <ul>\n      <li className=\"menu-link\">\n        <Link to=\"/dashboard\">dashboard</Link>\n      </li>\n      <li className=\"menu-link\">\n        <Link to=\"/community\" className=\"underline\">\n          community\n        </Link>\n      </li>\n      {/* // eslint-disable-next-line  */}\n      <li className=\"menu-link\">\n        <a href=\"\" onClick={logout}>\n          logout\n        </a>\n      </li>\n    </ul>\n  )\n\n  const publicNavbar = (\n    <ul>\n      <li className=\"menu-link\">\n        <Link to=\"/community\">community</Link>\n      </li>\n      <li className=\"menu-link\">\n        <Link to=\"/register\" className=\"underline\">\n          sign up\n        </Link>\n      </li>\n      <li className=\"menu-link\">\n        <Link to=\"/login\">sign in</Link>\n      </li>\n    </ul>\n  )\n\n  return (\n    <nav className=\"navbar bg-green\">\n      <h1>\n        <Link to=\"/\">book nuggets</Link>\n      </h1>\n      {!loading && (\n        <Fragment>{isAuthenticated ? privateNavbar : publicNavbar}</Fragment>\n      )}\n    </nav>\n  )\n}\n\nNavbar.propTypes = {\n  logout: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n})\n\nexport default connect(mapStateToProps, { logout })(Navbar)\n"]},"metadata":{},"sourceType":"module"}