{"ast":null,"code":"import axios from 'axios';\nimport config from '../config';\nimport { setAlert } from './alert';\nimport { GET_BOOKS, GET_BOOK, BOOK_ERROR, ADD_BOOK, DELETE_BOOK, ADD_NOTE, DELETE_NOTE } from './types'; // book\n\nexport const getBooks = () => async dispatch => {\n  try {\n    // const res = await axios.get(`${config.apiUrl}/books`)\n    const res = await axios.get(`/books`);\n    dispatch({\n      type: GET_BOOKS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: BOOK_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const getBook = bookId => async dispatch => {\n  try {\n    const res = await axios.get(`${config.apiUrl}/books/${bookId}`);\n    dispatch({\n      type: GET_BOOK,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: BOOK_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const deleteBook = bookId => async dispatch => {\n  try {\n    await axios.delete(`${config.apiUrl}/books/${bookId}`);\n    dispatch({\n      type: DELETE_BOOK,\n      payload: bookId\n    });\n  } catch (err) {\n    dispatch({\n      type: BOOK_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const addBook = formData => async dispatch => {\n  try {\n    const res = await axios.post(`${config.apiUrl}/books`, formData, config.apiConfig);\n    dispatch({\n      type: ADD_BOOK,\n      payload: res.data\n    });\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: BOOK_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // note \n\nexport const addNote = (bookId, formData) => async dispatch => {\n  try {\n    const res = await axios.post(`${config.apiUrl}/books/notes/${bookId}`, formData, config.apiConfig);\n    dispatch({\n      type: ADD_NOTE,\n      payload: res.data\n    });\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: BOOK_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const deleteNote = (bookId, noteId) => async dispatch => {\n  try {\n    axios.delete(`${config.apiUrl}/books/notes/${bookId}/${noteId}`);\n    dispatch({\n      type: DELETE_NOTE,\n      payload: noteId\n    });\n  } catch (err) {\n    dispatch({\n      type: BOOK_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};","map":{"version":3,"sources":["/Users/asl/PROJECTS/book-nugget/client/src/actions/book.js"],"names":["axios","config","setAlert","GET_BOOKS","GET_BOOK","BOOK_ERROR","ADD_BOOK","DELETE_BOOK","ADD_NOTE","DELETE_NOTE","getBooks","dispatch","res","get","type","payload","data","err","msg","response","statusText","status","getBook","bookId","apiUrl","deleteBook","delete","addBook","formData","post","apiConfig","errors","forEach","error","addNote","deleteNote","noteId"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport config from '../config'\nimport { setAlert } from './alert'\nimport {\n    GET_BOOKS,\n    GET_BOOK,\n    BOOK_ERROR,\n    ADD_BOOK,\n    DELETE_BOOK,\n    ADD_NOTE,\n    DELETE_NOTE,\n} from './types'\n\n// book\nexport const getBooks = () => async (dispatch) => {\n    try {\n\n        // const res = await axios.get(`${config.apiUrl}/books`)\n        const res = await axios.get(`/books`)\n\n        dispatch({\n            type: GET_BOOKS,\n            payload: res.data\n        })\n\n    } catch (err) {\n        dispatch({\n            type: BOOK_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        })\n    }\n}\n\nexport const getBook = bookId => async (dispatch) => {\n    try {\n\n        const res = await axios.get(`${config.apiUrl}/books/${bookId}`)\n\n        dispatch({\n            type: GET_BOOK,\n            payload: res.data\n        })\n\n    } catch (err) {\n        dispatch({\n            type: BOOK_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        })\n    }\n}\n\nexport const deleteBook = bookId => async (dispatch) => {\n    try {\n        \n        await axios.delete(`${config.apiUrl}/books/${bookId}`)\n\n        dispatch({\n            type: DELETE_BOOK,\n            payload: bookId\n        })\n\n    } catch (err) {\n        dispatch({\n            type: BOOK_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status}\n        })\n    }\n}\n\nexport const addBook = formData => async (dispatch) => {\n    try {\n\n        const res = await axios.post(`${config.apiUrl}/books`, formData, config.apiConfig)\n    \n        dispatch({\n            type: ADD_BOOK,\n            payload: res.data\n        })\n        \n    } catch (err) {\n        \n        const errors = err.response.data.errors\n\n        if (errors) {\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\n        }\n\n        dispatch({\n            type: BOOK_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status}\n        })\n    }\n\n}\n\n// note \nexport const addNote = (bookId, formData) => async (dispatch) => {\n    try {\n\n        const res = await axios.post(`${config.apiUrl}/books/notes/${bookId}`, formData, config.apiConfig)\n\n        dispatch({\n            type: ADD_NOTE,\n            payload: res.data\n        })\n        \n    } catch (err) {\n                \n        const errors = err.response.data.errors\n\n        if (errors) {\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\n        }\n\n        dispatch({\n            type: BOOK_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status}\n        })\n\n    }\n}\n\nexport const deleteNote = (bookId, noteId) => async (dispatch) => {\n    try {\n\n        axios.delete(`${config.apiUrl}/books/notes/${bookId}/${noteId}`)\n\n        dispatch({\n            type: DELETE_NOTE,\n            payload: noteId\n        })\n        \n    } catch (err) {\n\n        dispatch({\n            type: BOOK_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status}\n        })\n\n    }\n}"]},"metadata":{},"sourceType":"module"}