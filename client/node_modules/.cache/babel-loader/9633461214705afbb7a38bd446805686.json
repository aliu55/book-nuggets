{"ast":null,"code":"import axios from 'axios';\nimport { config } from '../config';\nimport { setAlert } from './alert';\nimport { GET_POSTS, GET_POST, DELETE_POST, ADD_POST, UPDATE_LIKES, POST_ERROR } from './types';\nexport const getPosts = () => async dispatch => {\n  try {\n    const res = await axios.get(`${config.apiUrl}/posts`);\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data\n    });\n    dispatch(setAlert('Retrieved all posts successfully!', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const getPost = id => async dispatch => {\n  try {\n    const res = await axios.get(`${config.apiUrl}/api/posts/${id}`);\n    dispatch({\n      type: GET_POST,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const deletePost = id => async dispatch => {\n  try {\n    await axios.delete(`${config.apiUrl}/posts/${id}`);\n    dispatch({\n      type: DELETE_POST,\n      payload: id\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const addPost = formData => async dispatch => {\n  try {\n    const apiConfig = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.post(`${config.apiUrl}/posts`, formData, apiConfig);\n    dispatch({\n      type: ADD_POST,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const addLike = postId => async dispatch => {\n  try {\n    const res = await axios.put(`${config.apiUrl}/posts/like/${postId}`);\n    console.log('addLike RESPONSE:', res.data);\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const removeLike = postId => async dispatch => {\n  try {\n    const res = await axios.put(`${config.apiUrl}/posts/unlike/${postId}`);\n    console.log('removeLike RESPONSE:', res.data);\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};","map":{"version":3,"sources":["/Users/asl/PROJECTS/simply-vegan/simply-vegan-frontend/src/actions/post.js"],"names":["axios","config","setAlert","GET_POSTS","GET_POST","DELETE_POST","ADD_POST","UPDATE_LIKES","POST_ERROR","getPosts","dispatch","res","get","apiUrl","type","payload","data","err","msg","response","statusText","status","getPost","id","deletePost","delete","addPost","formData","apiConfig","headers","post","addLike","postId","put","console","log","removeLike"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport { config } from '../config'\nimport { setAlert } from './alert'\nimport {\n    GET_POSTS,\n    GET_POST,\n    DELETE_POST,\n    ADD_POST,\n    UPDATE_LIKES,\n    POST_ERROR\n} from './types'\n\n\nexport const getPosts = () => async (dispatch) => {\n    try {\n\n        const res = await axios.get(`${config.apiUrl}/posts`)\n\n        dispatch({\n            type: GET_POSTS,\n            payload: res.data\n        })\n\n        dispatch(setAlert('Retrieved all posts successfully!', 'success'))\n\n    } catch (err) {\n        dispatch({\n            type: POST_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        })\n    }\n}\n\nexport const getPost = id => async dispatch => {\n\n    try {\n        const res = await axios.get(`${config.apiUrl}/api/posts/${id}`)\n\n        dispatch({\n            type: GET_POST,\n            payload: res.data\n        })\n\n    } catch (err) {\n        dispatch({\n            type: POST_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        });\n    }\n}\n\nexport const deletePost = id => async (dispatch) => {\n    try {\n\n        await axios.delete(`${config.apiUrl}/posts/${id}`)\n\n        dispatch({\n            type: DELETE_POST,\n            payload: id\n        })\n        \n    } catch (err) {\n        \n        dispatch({\n            type: POST_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        })\n\n    }\n}\n\nexport const addPost = formData => async (dispatch) => {\n    try {\n\n        const apiConfig = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const res = await axios.post(`${config.apiUrl}/posts`, formData, apiConfig)\n\n        dispatch({\n            type: ADD_POST,\n            payload: res.data\n        })\n        \n    } catch (err) {\n        \n        dispatch({\n            type: POST_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        })\n\n    }\n}\n\nexport const addLike = postId => async (dispatch) => {\n    try {\n\n        const res = await axios.put(`${config.apiUrl}/posts/like/${postId}`)\n\n        console.log('addLike RESPONSE:', res.data)\n\n        dispatch({\n            type: UPDATE_LIKES,\n            payload: res.data\n        })\n\n    } catch (err) {\n        dispatch({\n            type: POST_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        })\n    }\n}\n\nexport const removeLike = postId => async (dispatch) => {\n    try {\n\n        const res = await axios.put(`${config.apiUrl}/posts/unlike/${postId}`)\n\n        console.log('removeLike RESPONSE:', res.data)\n\n        dispatch({\n            type: UPDATE_LIKES,\n            payload: res.data\n        })\n\n    } catch (err) {\n        dispatch({\n            type: POST_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        })\n    }\n}"]},"metadata":{},"sourceType":"module"}