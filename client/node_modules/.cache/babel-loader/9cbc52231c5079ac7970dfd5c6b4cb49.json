{"ast":null,"code":"import _regeneratorRuntime from\"/Users/asl/PROJECTS/simply-vegan/simply-vegan-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/asl/PROJECTS/simply-vegan/simply-vegan-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import axios from'axios';import config from'../config';// redux\nimport{setAlert}from'./alert';import{REGISTER_SUCCESS,REGISTER_FAIL,LOGIN_SUCCESS,LOGIN_FAIL,LOGOUT,GET_USER_FAIL,GET_USER_SUCCESS}from'./types';// function for setting token\nimport setAuthToken from'../utils/setAuthToken';// load user\nexport var getUser=function getUser(){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(localStorage.token){setAuthToken(localStorage.token);}_context.prev=1;_context.next=4;return axios.get(\"\".concat(config.apiUrl,\"/auth\"));case 4:res=_context.sent;// response from server contains user info\ndispatch({type:GET_USER_SUCCESS,payload:res.data});_context.next=11;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](1);dispatch({type:GET_USER_FAIL});case 11:case\"end\":return _context.stop();}}},_callee,null,[[1,8]]);}));return function(_x){return _ref.apply(this,arguments);};}();};// register user\nexport var register=function register(_ref2){var name=_ref2.name,email=_ref2.email,password=_ref2.password;return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var body,res,errors;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;body=JSON.stringify({name:name,email:email,password:password});// send request to create a user\n_context2.next=4;return axios.post(\"\".concat(config.apiUrl,\"/users\"),body,config.apiConfig);case 4:res=_context2.sent;// response from server contains the user token\ndispatch({type:REGISTER_SUCCESS,payload:res.data});dispatch(getUser());_context2.next=14;break;case 9:_context2.prev=9;_context2.t0=_context2[\"catch\"](0);errors=_context2.t0.response.data.errors;if(errors){errors.forEach(function(error){return dispatch(setAlert(error.msg,'danger'));});}dispatch({type:REGISTER_FAIL});case 14:case\"end\":return _context2.stop();}}},_callee2,null,[[0,9]]);}));return function(_x2){return _ref3.apply(this,arguments);};}();};// login user\nexport var login=function login(_ref4){var email=_ref4.email,password=_ref4.password;return/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch){var body,res,errors;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;body=JSON.stringify({email:email,password:password});// send request to login user\n_context3.next=4;return axios.post(\"\".concat(config.apiUrl,\"/auth\"),body,config.apiConfig);case 4:res=_context3.sent;// response from server contains the user token\ndispatch({type:LOGIN_SUCCESS,payload:res.data});dispatch(getUser());_context3.next=14;break;case 9:_context3.prev=9;_context3.t0=_context3[\"catch\"](0);errors=_context3.t0.response.data.errors;if(errors){errors.forEach(function(error){return dispatch(setAlert(error.msg,'danger'));});}dispatch({type:LOGIN_FAIL});case 14:case\"end\":return _context3.stop();}}},_callee3,null,[[0,9]]);}));return function(_x3){return _ref5.apply(this,arguments);};}();};export var logout=function logout(){return/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch){return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:dispatch({type:LOGOUT});case 1:case\"end\":return _context4.stop();}}},_callee4);}));return function(_x4){return _ref6.apply(this,arguments);};}();};","map":{"version":3,"sources":["/Users/asl/PROJECTS/simply-vegan/simply-vegan-frontend/src/actions/auth.js"],"names":["axios","config","setAlert","REGISTER_SUCCESS","REGISTER_FAIL","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","GET_USER_FAIL","GET_USER_SUCCESS","setAuthToken","getUser","dispatch","localStorage","token","get","apiUrl","res","type","payload","data","register","name","email","password","body","JSON","stringify","post","apiConfig","errors","response","forEach","error","msg","login","logout"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport config from '../config'\n\n// redux\nimport { setAlert } from './alert'\nimport {\n    REGISTER_SUCCESS,\n    REGISTER_FAIL,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    LOGOUT,\n    GET_USER_FAIL,\n    GET_USER_SUCCESS,\n} from './types'\n\n// function for setting token\nimport setAuthToken from '../utils/setAuthToken'\n\n// load user\nexport const getUser = () => async (dispatch) => {\n    \n    if (localStorage.token) {\n        setAuthToken(localStorage.token)\n    }\n\n    try {\n        // if no token, then try to get user\n        const res = await axios.get(`${config.apiUrl}/auth`)\n\n        // response from server contains user info\n        dispatch({\n            type: GET_USER_SUCCESS,\n            payload: res.data\n        })\n\n    } catch (err) {\n        \n        dispatch({\n            type: GET_USER_FAIL\n        })\n\n    }\n}\n\n// register user\nexport const register = ({ name, email, password }) => async (dispatch) => {\n\n    try {\n\n        const body = JSON.stringify({\n            name,\n            email,\n            password\n        })\n\n        // send request to create a user\n        const res = await axios.post(`${config.apiUrl}/users`, body, config.apiConfig)\n\n        // response from server contains the user token\n        dispatch({\n            type: REGISTER_SUCCESS,\n            payload: res.data\n        })\n\n        dispatch(getUser())\n\n    } catch (err) {\n\n        const errors = err.response.data.errors\n\n        if (errors) {\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\n        }\n\n        dispatch({\n            type: REGISTER_FAIL\n        })\n\n    }\n}\n\n// login user\nexport const login = ({ email, password }) => async (dispatch) => {\n\n    try {\n\n        const body = JSON.stringify({\n            email,\n            password\n        })\n\n        // send request to login user\n        const res = await axios.post(`${config.apiUrl}/auth`, body, config.apiConfig)\n\n        // response from server contains the user token\n        dispatch({\n            type: LOGIN_SUCCESS,\n            payload: res.data\n        })\n\n        dispatch(getUser())\n\n    } catch (err) {\n\n        const errors = err.response.data.errors\n\n        if (errors) {\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\n        }\n\n        dispatch({\n            type: LOGIN_FAIL\n        })\n\n    }\n}\n\nexport const logout = () => async dispatch => {\n    dispatch({\n        type: LOGOUT\n    })\n}"]},"metadata":{},"sourceType":"module"}