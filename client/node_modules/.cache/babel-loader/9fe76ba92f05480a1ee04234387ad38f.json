{"ast":null,"code":"import React,{useEffect,Fragment}from'react';// redux\nimport{connect}from'react-redux';import{getPosts}from'../../actions/post';// components\nimport Spinner from'../layout/Spinner';import PostItem from'./PostItem';import PostForm from'./PostForm';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Posts=function Posts(_ref){var getPosts=_ref.getPosts,post=_ref.post;var posts=post.posts,loading=post.loading;useEffect(function(){getPosts();},[getPosts]);return loading?/*#__PURE__*/_jsx(Spinner,{}):/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(PostForm,{}),posts.map(function(post){return/*#__PURE__*/_jsx(PostItem,{post:post},post._id);})]});};var mapStateToProps=function mapStateToProps(state){return{post:state.post};};export default connect(mapStateToProps,{getPosts:getPosts})(Posts);","map":{"version":3,"sources":["/Users/asl/PROJECTS/simply-vegan/simply-vegan-frontend/src/components/posts/Posts.js"],"names":["React","useEffect","Fragment","connect","getPosts","Spinner","PostItem","PostForm","Posts","post","posts","loading","map","_id","mapStateToProps","state"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CAGA;AACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,QAAT,KAAyB,oBAAzB,CAEA;AACA,MAAOC,CAAAA,OAAP,KAAoB,mBAApB,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,C,wFAEA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,MAAwB,IAArBJ,CAAAA,QAAqB,MAArBA,QAAqB,CAAXK,IAAW,MAAXA,IAAW,CACpC,GAAQC,CAAAA,KAAR,CAA2BD,IAA3B,CAAQC,KAAR,CAAeC,OAAf,CAA2BF,IAA3B,CAAeE,OAAf,CAEAV,SAAS,CAAC,UAAM,CACdG,QAAQ,GACT,CAFQ,CAEN,CAACA,QAAD,CAFM,CAAT,CAIA,MAAOO,CAAAA,OAAO,cACZ,KAAC,OAAD,IADY,cAGZ,MAAC,QAAD,yBACE,KAAC,QAAD,IADF,CAEGD,KAAK,CAACE,GAAN,CAAU,SAACH,IAAD,qBACT,KAAC,QAAD,EAAyB,IAAI,CAAEA,IAA/B,EAAeA,IAAI,CAACI,GAApB,CADS,EAAV,CAFH,GAHF,CAUD,CAjBD,CAwBA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,QAAY,CAClCN,IAAI,CAAEM,KAAK,CAACN,IADsB,CAAZ,EAAxB,CAIA,cAAeN,CAAAA,OAAO,CAACW,eAAD,CAAkB,CAAEV,QAAQ,CAARA,QAAF,CAAlB,CAAP,CAAuCI,KAAvC,CAAf","sourcesContent":["import React, { useEffect, Fragment } from 'react'\nimport PropTypes from 'prop-types'\n\n// redux\nimport { connect } from 'react-redux'\nimport { getPosts } from '../../actions/post'\n\n// components\nimport Spinner from '../layout/Spinner'\nimport PostItem from './PostItem'\nimport PostForm from './PostForm'\n\nconst Posts = ({ getPosts, post }) => {\n  const { posts, loading } = post\n\n  useEffect(() => {\n    getPosts()\n  }, [getPosts])\n\n  return loading ? (\n    <Spinner />\n  ) : (\n    <Fragment>\n      <PostForm />\n      {posts.map((post) => (\n        <PostItem key={post._id} post={post} />\n      ))}\n    </Fragment>\n  )\n}\n\nPosts.propTypes = {\n  post: PropTypes.object.isRequired,\n  getPosts: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = (state) => ({\n  post: state.post,\n})\n\nexport default connect(mapStateToProps, { getPosts })(Posts)\n"]},"metadata":{},"sourceType":"module"}