{"ast":null,"code":"var _jsxFileName = \"/Users/asl/PROJECTS/simply-vegan/simply-vegan-frontend/src/components/notes/CreateNoteModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { motion } from 'framer-motion';\nimport './CreateNoteModal.css'; // redux\n\nimport { addNote } from '../../actions/book';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CreateNoteModal = ({\n  onCancel,\n  onCreate,\n  addNote\n}) => {\n  _s();\n\n  const [title, setTitle] = useState('');\n  const [text, setText] = useState('');\n  const [characterCount, setCharacterCount] = useState(0);\n\n  const onChange = e => {\n    setText(e.target.value);\n    setCharacterCount(e.target.value.length);\n  };\n\n  const onSubmit = e => {\n    e.preventDefault(); // addNote({ title })\n\n    onCreate();\n    setTitle('');\n    setText('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(motion.div, {\n    animate: {\n      opacity: [0, 1]\n    },\n    transition: {\n      duration: 0.5\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post modal-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"post-form\",\n        onSubmit: e => onSubmit(e),\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          cols: \"79\",\n          rows: \"4\",\n          placeholder: \"what's your nugget?\",\n          name: \"text\" //   value={text}\n          ,\n          onChange: e => onChange(e),\n          maxLength: \"500\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"character-count\",\n          children: [characterCount, \"/500\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"book-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"add\",\n          className: \"book-btn btn-success\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: onCancel,\n          className: \"book-btn btn-danger\",\n          children: \"cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CreateNoteModal, \"HkEM2RzA8eWZZ40cKfrbQNg2dpU=\");\n\n_c = CreateNoteModal;\nCreateNoteModal.propTypes = {\n  onCancel: PropTypes.func.isRequired,\n  onCreate: PropTypes.func.isRequired,\n  addNote: PropTypes.func.isRequired\n};\nexport default connect(null, {\n  addNote\n})(CreateNoteModal);\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateNoteModal\");","map":{"version":3,"sources":["/Users/asl/PROJECTS/simply-vegan/simply-vegan-frontend/src/components/notes/CreateNoteModal.js"],"names":["React","useState","PropTypes","motion","addNote","connect","CreateNoteModal","onCancel","onCreate","title","setTitle","text","setText","characterCount","setCharacterCount","onChange","e","target","value","length","onSubmit","preventDefault","opacity","duration","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { motion } from 'framer-motion'\nimport './CreateNoteModal.css'\n\n// redux\nimport { addNote } from '../../actions/book'\nimport { connect } from 'react-redux'\n\nconst CreateNoteModal = ({ onCancel, onCreate, addNote }) => {\n  const [title, setTitle] = useState('')\n  const [text, setText] = useState('')\n  const [characterCount, setCharacterCount] = useState(0)\n\n  const onChange = (e) => {\n    setText(e.target.value)\n    setCharacterCount(e.target.value.length)\n  }\n\n  const onSubmit = (e) => {\n    e.preventDefault()\n\n    // addNote({ title })\n    onCreate()\n    setTitle('')\n    setText('')\n  }\n\n  return (\n    <motion.div\n      animate={{\n        opacity: [0, 1],\n      }}\n      transition={{\n        duration: 0.5,\n      }}\n    >\n      <div className=\"post modal-center\">\n        <form className=\"post-form\" onSubmit={(e) => onSubmit(e)}>\n          <textarea\n            cols=\"79\"\n            rows=\"4\"\n            placeholder=\"what's your nugget?\"\n            name=\"text\"\n            //   value={text}\n            onChange={(e) => onChange(e)}\n            maxLength=\"500\"\n            required\n          ></textarea>\n          <p className=\"character-count\">{characterCount}/500</p>\n        </form>\n\n        \n\n        {/* add and cancel buttons */}\n        <div className=\"book-form\">\n          <input type=\"submit\" value=\"add\" className=\"book-btn btn-success\" />\n\n          <button\n            type=\"button\"\n            onClick={onCancel}\n            className=\"book-btn btn-danger\"\n          >\n            cancel\n          </button>\n        </div>\n      </div>\n    </motion.div>\n  )\n}\n\nCreateNoteModal.propTypes = {\n  onCancel: PropTypes.func.isRequired,\n  onCreate: PropTypes.func.isRequired,\n  addNote: PropTypes.func.isRequired,\n}\n\nexport default connect(null, { addNote })(CreateNoteModal)\n"]},"metadata":{},"sourceType":"module"}