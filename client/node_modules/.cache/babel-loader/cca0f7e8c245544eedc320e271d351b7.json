{"ast":null,"code":"var _jsxFileName = \"/Users/asl/PROJECTS/simply-vegan/simply-vegan-frontend/src/components/notes/Notes.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Spinner from '../layout/Spinner'; // redux\n\nimport { getBook } from '../../actions/book';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Notes = ({\n  getBook,\n  book: {\n    book,\n    loading\n  },\n  match\n}) => {\n  _s();\n\n  useEffect(() => {\n    getBook(match.params.book_id);\n  }, [getBook]);\n  return loading || book === null ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n    children: book.notes.map( /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"this is a book note\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 31\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Notes, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Notes;\nNotes.propTypes = {\n  getBook: PropTypes.func.isRequired,\n  book: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  book: state.book\n});\n\nexport default connect(mapStateToProps, {\n  getBook\n})(Notes);\n\nvar _c;\n\n$RefreshReg$(_c, \"Notes\");","map":{"version":3,"sources":["/Users/asl/PROJECTS/simply-vegan/simply-vegan-frontend/src/components/notes/Notes.js"],"names":["React","Fragment","useEffect","PropTypes","Spinner","getBook","connect","Notes","book","loading","match","params","book_id","notes","map","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,OAAP,MAAoB,mBAApB,C,CAEA;;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEF,EAAAA,OAAF;AAAWG,EAAAA,IAAI,EAAE;AAAEA,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAjB;AAAoCC,EAAAA;AAApC,CAAD,KAAiD;AAAA;;AAC7DR,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,OAAO,CAACK,KAAK,CAACC,MAAN,CAAaC,OAAd,CAAP;AACD,GAFQ,EAEN,CAACP,OAAD,CAFM,CAAT;AAIA,SAAOI,OAAO,IAAID,IAAI,KAAK,IAApB,gBACL,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UADK,gBAGL,QAAC,QAAD;AAAA,cAAWA,IAAI,CAACK,KAAL,CAAWC,GAAX,eAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAf;AAAX;AAAA;AAAA;AAAA;AAAA,UAHF;AAKD,CAVD;;GAAMP,K;;KAAAA,K;AAYNA,KAAK,CAACQ,SAAN,GAAkB;AAChBV,EAAAA,OAAO,EAAEF,SAAS,CAACa,IAAV,CAAeC,UADR;AAEhBT,EAAAA,IAAI,EAAEL,SAAS,CAACe,MAAV,CAAiBD;AAFP,CAAlB;;AAKA,MAAME,eAAe,GAAIC,KAAD,KAAY;AAClCZ,EAAAA,IAAI,EAAEY,KAAK,CAACZ;AADsB,CAAZ,CAAxB;;AAIA,eAAeF,OAAO,CAACa,eAAD,EAAkB;AAAEd,EAAAA;AAAF,CAAlB,CAAP,CAAsCE,KAAtC,CAAf","sourcesContent":["import React, { Fragment, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport Spinner from '../layout/Spinner'\n\n// redux\nimport { getBook } from '../../actions/book'\nimport { connect } from 'react-redux'\n\nconst Notes = ({ getBook, book: { book, loading }, match }) => {\n  useEffect(() => {\n    getBook(match.params.book_id)\n  }, [getBook])\n\n  return loading || book === null ? (\n    <Spinner />\n  ) : (\n    <Fragment>{book.notes.map(<div>this is a book note</div>)}</Fragment>\n  )\n}\n\nNotes.propTypes = {\n  getBook: PropTypes.func.isRequired,\n  book: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = (state) => ({\n  book: state.book,\n})\n\nexport default connect(mapStateToProps, { getBook })(Notes)\n"]},"metadata":{},"sourceType":"module"}