{"ast":null,"code":"var _jsxFileName = \"/Users/asl/PROJECTS/simply-vegan/simply-vegan-frontend/src/components/notes/Notes.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types'; // redux\n\nimport { getBook } from '../../actions/book';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Notes = ({\n  getBook,\n  book: {\n    book,\n    loading\n  },\n  match\n}) => {\n  _s();\n\n  useEffect(() => {\n    console.log(match.params.book_id);\n    getBook(match.params.book_id);\n  }, [getBook]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: book.notes.map( /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"this is a book note\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Notes, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Notes;\nNotes.propTypes = {\n  getBook: PropTypes.func.isRequired,\n  book: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  book: state.book\n});\n\nexport default connect(mapStateToProps, {\n  getBook\n})(Notes);\n\nvar _c;\n\n$RefreshReg$(_c, \"Notes\");","map":{"version":3,"sources":["/Users/asl/PROJECTS/simply-vegan/simply-vegan-frontend/src/components/notes/Notes.js"],"names":["React","Fragment","useEffect","PropTypes","getBook","connect","Notes","book","loading","match","console","log","params","book_id","notes","map","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEF,EAAAA,OAAF;AAAWG,EAAAA,IAAI,EAAE;AAAEA,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAjB;AAAoCC,EAAAA;AAApC,CAAD,KAAiD;AAAA;;AAC3DP,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAN,CAAaC,OAAzB;AACAT,IAAAA,OAAO,CAACK,KAAK,CAACG,MAAN,CAAaC,OAAd,CAAP;AACH,GAHQ,EAGN,CAACT,OAAD,CAHM,CAAT;AAKA,sBACI,QAAC,QAAD;AAAA,cACKG,IAAI,CAACO,KAAL,CAAWC,GAAX,eACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADC;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CAfD;;GAAMT,K;;KAAAA,K;AAiBNA,KAAK,CAACU,SAAN,GAAkB;AACdZ,EAAAA,OAAO,EAAED,SAAS,CAACc,IAAV,CAAeC,UADV;AAEdX,EAAAA,IAAI,EAAEJ,SAAS,CAACgB,MAAV,CAAiBD;AAFT,CAAlB;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAC9Bd,EAAAA,IAAI,EAAEc,KAAK,CAACd;AADkB,CAAL,CAA7B;;AAIA,eAAeF,OAAO,CAClBe,eADkB,EAElB;AAAEhB,EAAAA;AAAF,CAFkB,CAAP,CAGbE,KAHa,CAAf","sourcesContent":["import React, { Fragment, useEffect } from 'react'\nimport PropTypes from 'prop-types'\n\n// redux\nimport { getBook } from '../../actions/book'\nimport { connect } from 'react-redux'\n\nconst Notes = ({ getBook, book: { book, loading }, match }) => {\n    useEffect(() => {\n        console.log(match.params.book_id)\n        getBook(match.params.book_id)\n    }, [getBook])\n    \n    return (\n        <Fragment>\n            {book.notes.map(\n            <div>\n                this is a book note    \n            </div>\n            )}\n        </Fragment>\n    )\n}\n\nNotes.propTypes = {\n    getBook: PropTypes.func.isRequired,\n    book: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    book: state.book\n})\n\nexport default connect(\n    mapStateToProps,\n    { getBook }\n)(Notes)\n"]},"metadata":{},"sourceType":"module"}