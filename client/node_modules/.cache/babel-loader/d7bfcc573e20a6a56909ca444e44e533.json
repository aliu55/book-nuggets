{"ast":null,"code":"import { GET_BOOKS, GET_BOOK, BOOK_ERROR, ADD_BOOK, DELETE_BOOK, ADD_NOTE, DELETE_NOTE } from '../actions/types';\nconst initialState = {\n  books: [],\n  book: null,\n  loading: true,\n  error: {}\n};\nexport default function bookReducer(state = initialState, action) {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case GET_BOOKS:\n      return { ...state,\n        books: payload,\n        loading: false\n      };\n\n    case GET_BOOK:\n      return { ...state,\n        book: payload,\n        loading: false\n      };\n\n    case ADD_BOOK:\n      return { ...state,\n        books: [payload, ...state.books],\n        loading: false\n      };\n\n    case DELETE_BOOK:\n      return { ...state,\n        books: state.books.filter(book => book._id !== payload),\n        loading: false\n      };\n\n    case ADD_NOTE:\n      return { ...state,\n        book: { ...state.book,\n          notes: payload\n        },\n        loading: false\n      };\n\n    case DELETE_NOTE:\n      return { ...state,\n        book: { ...state.book,\n          notes: state.book.notes.filter(note => note._id !== payload)\n        },\n        loading: false\n      };\n\n    case BOOK_ERROR:\n      return { ...state,\n        loading: false,\n        error: payload\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/asl/PROJECTS/book-nugget/client/src/reducers/book.js"],"names":["GET_BOOKS","GET_BOOK","BOOK_ERROR","ADD_BOOK","DELETE_BOOK","ADD_NOTE","DELETE_NOTE","initialState","books","book","loading","error","bookReducer","state","action","type","payload","filter","_id","notes","note"],"mappings":"AAAA,SACIA,SADJ,EAEIC,QAFJ,EAGIC,UAHJ,EAIIC,QAJJ,EAKIC,WALJ,EAMIC,QANJ,EAOIC,WAPJ,QAQO,kBARP;AAUA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,EADU;AAEjBC,EAAAA,IAAI,EAAE,IAFW;AAGjBC,EAAAA,OAAO,EAAE,IAHQ;AAIjBC,EAAAA,KAAK,EAAE;AAJU,CAArB;AAOA,eAAe,SAASC,WAAT,CAAqBC,KAAK,GAAGN,YAA7B,EAA2CO,MAA3C,EAAmD;AAE9D,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AAEA,UAAQC,IAAR;AACI,SAAKf,SAAL;AACI,aAAO,EACH,GAAGa,KADA;AAEHL,QAAAA,KAAK,EAAEQ,OAFJ;AAGHN,QAAAA,OAAO,EAAE;AAHN,OAAP;;AAMJ,SAAKT,QAAL;AACI,aAAO,EACH,GAAGY,KADA;AAEHJ,QAAAA,IAAI,EAAEO,OAFH;AAGHN,QAAAA,OAAO,EAAE;AAHN,OAAP;;AAMJ,SAAKP,QAAL;AACI,aAAO,EACH,GAAGU,KADA;AAEHL,QAAAA,KAAK,EAAE,CAACQ,OAAD,EAAU,GAAGH,KAAK,CAACL,KAAnB,CAFJ;AAGHE,QAAAA,OAAO,EAAE;AAHN,OAAP;;AAMJ,SAAKN,WAAL;AACI,aAAO,EACH,GAAGS,KADA;AAEHL,QAAAA,KAAK,EAAEK,KAAK,CAACL,KAAN,CAAYS,MAAZ,CAAmBR,IAAI,IAAIA,IAAI,CAACS,GAAL,KAAaF,OAAxC,CAFJ;AAGHN,QAAAA,OAAO,EAAE;AAHN,OAAP;;AAMJ,SAAKL,QAAL;AACI,aAAO,EACH,GAAGQ,KADA;AAEHJ,QAAAA,IAAI,EAAE,EAAE,GAAGI,KAAK,CAACJ,IAAX;AAAiBU,UAAAA,KAAK,EAAEH;AAAxB,SAFH;AAGHN,QAAAA,OAAO,EAAE;AAHN,OAAP;;AAMJ,SAAKJ,WAAL;AACI,aAAO,EACH,GAAGO,KADA;AAEHJ,QAAAA,IAAI,EAAE,EAAE,GAAGI,KAAK,CAACJ,IAAX;AAAiBU,UAAAA,KAAK,EAAEN,KAAK,CAACJ,IAAN,CAAWU,KAAX,CAAiBF,MAAjB,CAAwBG,IAAI,IAAIA,IAAI,CAACF,GAAL,KAAaF,OAA7C;AAAxB,SAFH;AAGHN,QAAAA,OAAO,EAAE;AAHN,OAAP;;AAMJ,SAAKR,UAAL;AACI,aAAO,EACH,GAAGW,KADA;AAEHH,QAAAA,OAAO,EAAE,KAFN;AAGHC,QAAAA,KAAK,EAAEK;AAHJ,OAAP;;AAMJ;AACI,aAAOH,KAAP;AAnDR;AAsDH","sourcesContent":["import {\n    GET_BOOKS,\n    GET_BOOK,\n    BOOK_ERROR,\n    ADD_BOOK,\n    DELETE_BOOK,\n    ADD_NOTE,\n    DELETE_NOTE,\n} from '../actions/types'\n\nconst initialState = {\n    books: [],\n    book: null,\n    loading: true,\n    error: {}\n}\n\nexport default function bookReducer(state = initialState, action) {\n    \n    const { type, payload } = action\n    \n    switch (type) {\n        case GET_BOOKS:\n            return {\n                ...state,\n                books: payload,\n                loading: false,\n            }\n        \n        case GET_BOOK:\n            return {\n                ...state,\n                book: payload,\n                loading: false\n            }\n        \n        case ADD_BOOK:\n            return {\n                ...state,\n                books: [payload, ...state.books],\n                loading: false,\n            }\n        \n        case DELETE_BOOK:\n            return {\n                ...state,\n                books: state.books.filter(book => book._id !== payload),\n                loading: false,\n            }\n        \n        case ADD_NOTE:\n            return {\n                ...state,\n                book: { ...state.book, notes: payload },\n                loading: false,\n            }\n        \n        case DELETE_NOTE:\n            return {\n                ...state,\n                book: { ...state.book, notes: state.book.notes.filter(note => note._id !== payload) },\n                loading: false,\n            }\n        \n        case BOOK_ERROR:\n            return {\n                ...state,\n                loading: false,\n                error: payload\n            }\n        \n        default:\n            return state\n    }\n\n}"]},"metadata":{},"sourceType":"module"}